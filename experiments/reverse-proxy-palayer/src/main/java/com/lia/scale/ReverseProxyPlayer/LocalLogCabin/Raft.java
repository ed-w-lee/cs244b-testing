// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Raft.proto

package com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol;

public final class Raft {
  private Raft() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code LogCabin.Protocol.Raft.OpCode}
   *
   * <pre>
   **
   * Identifies which RPC is being executed.
   * </pre>
   */
  public enum OpCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST_VOTE = 1;</code>
     *
     * <pre>
     * Keep these numbers dense.
     * </pre>
     */
    REQUEST_VOTE(0, 1),
    /**
     * <code>APPEND_ENTRIES = 2;</code>
     */
    APPEND_ENTRIES(1, 2),
    /**
     * <code>INSTALL_SNAPSHOT = 3;</code>
     */
    INSTALL_SNAPSHOT(2, 3),
    ;

    /**
     * <code>REQUEST_VOTE = 1;</code>
     *
     * <pre>
     * Keep these numbers dense.
     * </pre>
     */
    public static final int REQUEST_VOTE_VALUE = 1;
    /**
     * <code>APPEND_ENTRIES = 2;</code>
     */
    public static final int APPEND_ENTRIES_VALUE = 2;
    /**
     * <code>INSTALL_SNAPSHOT = 3;</code>
     */
    public static final int INSTALL_SNAPSHOT_VALUE = 3;


    public final int getNumber() { return value; }

    public static OpCode valueOf(int value) {
      switch (value) {
        case 1: return REQUEST_VOTE;
        case 2: return APPEND_ENTRIES;
        case 3: return INSTALL_SNAPSHOT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OpCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OpCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OpCode>() {
            public OpCode findValueByNumber(int number) {
              return OpCode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.getDescriptor().getEnumTypes().get(0);
    }

    private static final OpCode[] VALUES = values();

    public static OpCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private OpCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LogCabin.Protocol.Raft.OpCode)
  }

  /**
   * Protobuf enum {@code LogCabin.Protocol.Raft.EntryType}
   *
   * <pre>
   **
   * The type of payload stored in a log entry.
   * </pre>
   */
  public enum EntryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     *
     * <pre>
     **
     * This must be the first value in the enum and is never assigned
     * explicitly. If new values are added, old code will see them as set
     * and equal to this value (though they will still serialize to the
     * correct value).
     * </pre>
     */
    UNKNOWN(0, 0),
    /**
     * <code>CONFIGURATION = 1;</code>
     *
     * <pre>
     **
     * Stores a 'Configuration', to be used internally by the consensus module.
     * </pre>
     */
    CONFIGURATION(1, 1),
    /**
     * <code>DATA = 2;</code>
     *
     * <pre>
     **
     * Stores a command to be processed by the state machine.
     * </pre>
     */
    DATA(2, 2),
    /**
     * <code>NOOP = 3;</code>
     *
     * <pre>
     **
     * No op.
     * </pre>
     */
    NOOP(3, 3),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     *
     * <pre>
     **
     * This must be the first value in the enum and is never assigned
     * explicitly. If new values are added, old code will see them as set
     * and equal to this value (though they will still serialize to the
     * correct value).
     * </pre>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>CONFIGURATION = 1;</code>
     *
     * <pre>
     **
     * Stores a 'Configuration', to be used internally by the consensus module.
     * </pre>
     */
    public static final int CONFIGURATION_VALUE = 1;
    /**
     * <code>DATA = 2;</code>
     *
     * <pre>
     **
     * Stores a command to be processed by the state machine.
     * </pre>
     */
    public static final int DATA_VALUE = 2;
    /**
     * <code>NOOP = 3;</code>
     *
     * <pre>
     **
     * No op.
     * </pre>
     */
    public static final int NOOP_VALUE = 3;


    public final int getNumber() { return value; }

    public static EntryType valueOf(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return CONFIGURATION;
        case 2: return DATA;
        case 3: return NOOP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EntryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EntryType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EntryType>() {
            public EntryType findValueByNumber(int number) {
              return EntryType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.getDescriptor().getEnumTypes().get(1);
    }

    private static final EntryType[] VALUES = values();

    public static EntryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EntryType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LogCabin.Protocol.Raft.EntryType)
  }

  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.Error)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.Error}
   *
   * <pre>
   **
   * The type of "service-specific error" replies that this service returns.
   * </pre>
   */
  public static final class Error extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.Error)
      ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Error(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Error defaultInstance;
    public static Error getDefaultInstance() {
      return defaultInstance;
    }

    public Error getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Error_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.Builder.class);
    }

    public static com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.Error}
     *
     * <pre>
     **
     * The type of "service-specific error" replies that this service returns.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.Error)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Error_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Error_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Error) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.Error)
    }

    static {
      defaultInstance = new Error(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.Error)
  }

  public interface ServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.Server)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 server_id = 1;</code>
     *
     * <pre>
     **
     * The ID of the server.
     * </pre>
     */
    boolean hasServerId();
    /**
     * <code>required uint64 server_id = 1;</code>
     *
     * <pre>
     **
     * The ID of the server.
     * </pre>
     */
    long getServerId();

    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    boolean hasAddresses();
    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    java.lang.String getAddresses();
    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    com.google.protobuf.ByteString
        getAddressesBytes();
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.Server}
   *
   * <pre>
   **
   * A server in a configuration.
   * </pre>
   */
  public static final class Server extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.Server)
      ServerOrBuilder {
    // Use Server.newBuilder() to construct.
    private Server(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Server(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Server defaultInstance;
    public static Server getDefaultInstance() {
      return defaultInstance;
    }

    public Server getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Server(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serverId_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              addresses_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Server_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Server_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder.class);
    }

    public static com.google.protobuf.Parser<Server> PARSER =
        new com.google.protobuf.AbstractParser<Server>() {
      public Server parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Server(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Server> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERVER_ID_FIELD_NUMBER = 1;
    private long serverId_;
    /**
     * <code>required uint64 server_id = 1;</code>
     *
     * <pre>
     **
     * The ID of the server.
     * </pre>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 server_id = 1;</code>
     *
     * <pre>
     **
     * The ID of the server.
     * </pre>
     */
    public long getServerId() {
      return serverId_;
    }

    public static final int ADDRESSES_FIELD_NUMBER = 2;
    private java.lang.Object addresses_;
    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    public boolean hasAddresses() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    public java.lang.String getAddresses() {
      java.lang.Object ref = addresses_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          addresses_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string addresses = 2;</code>
     *
     * <pre>
     **
     * The network address(es) of the server (comma-delimited).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAddressesBytes() {
      java.lang.Object ref = addresses_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        addresses_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      serverId_ = 0L;
      addresses_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasServerId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAddresses()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, serverId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAddressesBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, serverId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAddressesBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.Server}
     *
     * <pre>
     **
     * A server in a configuration.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.Server)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Server_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Server_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        addresses_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Server_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverId_ = serverId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.addresses_ = addresses_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.getDefaultInstance()) return this;
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasAddresses()) {
          bitField0_ |= 0x00000002;
          addresses_ = other.addresses_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServerId()) {
          
          return false;
        }
        if (!hasAddresses()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long serverId_ ;
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * The ID of the server.
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * The ID of the server.
       * </pre>
       */
      public long getServerId() {
        return serverId_;
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * The ID of the server.
       * </pre>
       */
      public Builder setServerId(long value) {
        bitField0_ |= 0x00000001;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * The ID of the server.
       * </pre>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object addresses_ = "";
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public boolean hasAddresses() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public java.lang.String getAddresses() {
        java.lang.Object ref = addresses_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            addresses_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAddressesBytes() {
        java.lang.Object ref = addresses_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          addresses_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public Builder setAddresses(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        addresses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public Builder clearAddresses() {
        bitField0_ = (bitField0_ & ~0x00000002);
        addresses_ = getDefaultInstance().getAddresses();
        onChanged();
        return this;
      }
      /**
       * <code>required string addresses = 2;</code>
       *
       * <pre>
       **
       * The network address(es) of the server (comma-delimited).
       * </pre>
       */
      public Builder setAddressesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        addresses_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.Server)
    }

    static {
      defaultInstance = new Server(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.Server)
  }

  public interface SimpleConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.SimpleConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> 
        getServersList();
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server getServers(int index);
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    int getServersCount();
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder> 
        getServersOrBuilderList();
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder getServersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.SimpleConfiguration}
   *
   * <pre>
   **
   * A stable configuraton, in which a simple majority constitutes a quorum.
   * </pre>
   */
  public static final class SimpleConfiguration extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.SimpleConfiguration)
      SimpleConfigurationOrBuilder {
    // Use SimpleConfiguration.newBuilder() to construct.
    private SimpleConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SimpleConfiguration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SimpleConfiguration defaultInstance;
    public static SimpleConfiguration getDefaultInstance() {
      return defaultInstance;
    }

    public SimpleConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SimpleConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                servers_ = new java.util.ArrayList<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server>();
                mutable_bitField0_ |= 0x00000001;
              }
              servers_.add(input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = java.util.Collections.unmodifiableList(servers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder.class);
    }

    public static com.google.protobuf.Parser<SimpleConfiguration> PARSER =
        new com.google.protobuf.AbstractParser<SimpleConfiguration>() {
      public SimpleConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SimpleConfiguration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleConfiguration> getParserForType() {
      return PARSER;
    }

    public static final int SERVERS_FIELD_NUMBER = 1;
    private java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> servers_;
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> getServersList() {
      return servers_;
    }
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    public java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder> 
        getServersOrBuilderList() {
      return servers_;
    }
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    public int getServersCount() {
      return servers_.size();
    }
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server getServers(int index) {
      return servers_.get(index);
    }
    /**
     * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder getServersOrBuilder(
        int index) {
      return servers_.get(index);
    }

    private void initFields() {
      servers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getServersCount(); i++) {
        if (!getServers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < servers_.size(); i++) {
        output.writeMessage(1, servers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < servers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, servers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.SimpleConfiguration}
     *
     * <pre>
     **
     * A stable configuraton, in which a simple majority constitutes a quorum.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.SimpleConfiguration)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getServersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          serversBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration(this);
        int from_bitField0_ = bitField0_;
        if (serversBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            servers_ = java.util.Collections.unmodifiableList(servers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.servers_ = servers_;
        } else {
          result.servers_ = serversBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance()) return this;
        if (serversBuilder_ == null) {
          if (!other.servers_.isEmpty()) {
            if (servers_.isEmpty()) {
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureServersIsMutable();
              servers_.addAll(other.servers_);
            }
            onChanged();
          }
        } else {
          if (!other.servers_.isEmpty()) {
            if (serversBuilder_.isEmpty()) {
              serversBuilder_.dispose();
              serversBuilder_ = null;
              servers_ = other.servers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              serversBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServersFieldBuilder() : null;
            } else {
              serversBuilder_.addAllMessages(other.servers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getServersCount(); i++) {
          if (!getServers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> servers_ =
        java.util.Collections.emptyList();
      private void ensureServersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          servers_ = new java.util.ArrayList<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server>(servers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder> serversBuilder_;

      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> getServersList() {
        if (serversBuilder_ == null) {
          return java.util.Collections.unmodifiableList(servers_);
        } else {
          return serversBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public int getServersCount() {
        if (serversBuilder_ == null) {
          return servers_.size();
        } else {
          return serversBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server getServers(int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);
        } else {
          return serversBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.set(index, value);
          onChanged();
        } else {
          serversBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder setServers(
          int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.set(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder addServers(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(value);
          onChanged();
        } else {
          serversBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server value) {
        if (serversBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServersIsMutable();
          servers_.add(index, value);
          onChanged();
        } else {
          serversBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder addServers(
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder addServers(
          int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder builderForValue) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.add(index, builderForValue.build());
          onChanged();
        } else {
          serversBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder addAllServers(
          java.lang.Iterable<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server> values) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, servers_);
          onChanged();
        } else {
          serversBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder clearServers() {
        if (serversBuilder_ == null) {
          servers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          serversBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public Builder removeServers(int index) {
        if (serversBuilder_ == null) {
          ensureServersIsMutable();
          servers_.remove(index);
          onChanged();
        } else {
          serversBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder getServersBuilder(
          int index) {
        return getServersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder getServersOrBuilder(
          int index) {
        if (serversBuilder_ == null) {
          return servers_.get(index);  } else {
          return serversBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder> 
           getServersOrBuilderList() {
        if (serversBuilder_ != null) {
          return serversBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(servers_);
        }
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder addServersBuilder() {
        return getServersFieldBuilder().addBuilder(
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder addServersBuilder(
          int index) {
        return getServersFieldBuilder().addBuilder(
            index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.getDefaultInstance());
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Server servers = 1;</code>
       */
      public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder> 
           getServersBuilderList() {
        return getServersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder> 
          getServersFieldBuilder() {
        if (serversBuilder_ == null) {
          serversBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Server.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ServerOrBuilder>(
                  servers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          servers_ = null;
        }
        return serversBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.SimpleConfiguration)
    }

    static {
      defaultInstance = new SimpleConfiguration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.SimpleConfiguration)
  }

  public interface ConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.Configuration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    boolean hasPrevConfiguration();
    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getPrevConfiguration();
    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getPrevConfigurationOrBuilder();

    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    boolean hasNextConfiguration();
    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getNextConfiguration();
    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getNextConfigurationOrBuilder();
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.Configuration}
   *
   * <pre>
   **
   * A stable or transitional configuration.
   * </pre>
   */
  public static final class Configuration extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.Configuration)
      ConfigurationOrBuilder {
    // Use Configuration.newBuilder() to construct.
    private Configuration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Configuration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Configuration defaultInstance;
    public static Configuration getDefaultInstance() {
      return defaultInstance;
    }

    public Configuration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Configuration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = prevConfiguration_.toBuilder();
              }
              prevConfiguration_ = input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(prevConfiguration_);
                prevConfiguration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = nextConfiguration_.toBuilder();
              }
              nextConfiguration_ = input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nextConfiguration_);
                nextConfiguration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Configuration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Configuration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder.class);
    }

    public static com.google.protobuf.Parser<Configuration> PARSER =
        new com.google.protobuf.AbstractParser<Configuration>() {
      public Configuration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Configuration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Configuration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PREV_CONFIGURATION_FIELD_NUMBER = 1;
    private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration prevConfiguration_;
    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    public boolean hasPrevConfiguration() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getPrevConfiguration() {
      return prevConfiguration_;
    }
    /**
     * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
     *
     * <pre>
     **
     * The servers in a stable configuration, or the old servers in a
     * transitional configuration.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getPrevConfigurationOrBuilder() {
      return prevConfiguration_;
    }

    public static final int NEXT_CONFIGURATION_FIELD_NUMBER = 2;
    private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration nextConfiguration_;
    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    public boolean hasNextConfiguration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getNextConfiguration() {
      return nextConfiguration_;
    }
    /**
     * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
     *
     * <pre>
     **
     * Not present in a stable configuration, or the new servers in a
     * transitional configuration.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getNextConfigurationOrBuilder() {
      return nextConfiguration_;
    }

    private void initFields() {
      prevConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
      nextConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPrevConfiguration()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPrevConfiguration().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasNextConfiguration()) {
        if (!getNextConfiguration().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, prevConfiguration_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, nextConfiguration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, prevConfiguration_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nextConfiguration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.Configuration}
     *
     * <pre>
     **
     * A stable or transitional configuration.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.Configuration)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Configuration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Configuration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPrevConfigurationFieldBuilder();
          getNextConfigurationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (prevConfigurationBuilder_ == null) {
          prevConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
        } else {
          prevConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (nextConfigurationBuilder_ == null) {
          nextConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
        } else {
          nextConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Configuration_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (prevConfigurationBuilder_ == null) {
          result.prevConfiguration_ = prevConfiguration_;
        } else {
          result.prevConfiguration_ = prevConfigurationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (nextConfigurationBuilder_ == null) {
          result.nextConfiguration_ = nextConfiguration_;
        } else {
          result.nextConfiguration_ = nextConfigurationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance()) return this;
        if (other.hasPrevConfiguration()) {
          mergePrevConfiguration(other.getPrevConfiguration());
        }
        if (other.hasNextConfiguration()) {
          mergeNextConfiguration(other.getNextConfiguration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPrevConfiguration()) {
          
          return false;
        }
        if (!getPrevConfiguration().isInitialized()) {
          
          return false;
        }
        if (hasNextConfiguration()) {
          if (!getNextConfiguration().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration prevConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder> prevConfigurationBuilder_;
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public boolean hasPrevConfiguration() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getPrevConfiguration() {
        if (prevConfigurationBuilder_ == null) {
          return prevConfiguration_;
        } else {
          return prevConfigurationBuilder_.getMessage();
        }
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder setPrevConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration value) {
        if (prevConfigurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          prevConfiguration_ = value;
          onChanged();
        } else {
          prevConfigurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder setPrevConfiguration(
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder builderForValue) {
        if (prevConfigurationBuilder_ == null) {
          prevConfiguration_ = builderForValue.build();
          onChanged();
        } else {
          prevConfigurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder mergePrevConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration value) {
        if (prevConfigurationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              prevConfiguration_ != com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance()) {
            prevConfiguration_ =
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.newBuilder(prevConfiguration_).mergeFrom(value).buildPartial();
          } else {
            prevConfiguration_ = value;
          }
          onChanged();
        } else {
          prevConfigurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder clearPrevConfiguration() {
        if (prevConfigurationBuilder_ == null) {
          prevConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
          onChanged();
        } else {
          prevConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder getPrevConfigurationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPrevConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getPrevConfigurationOrBuilder() {
        if (prevConfigurationBuilder_ != null) {
          return prevConfigurationBuilder_.getMessageOrBuilder();
        } else {
          return prevConfiguration_;
        }
      }
      /**
       * <code>required .LogCabin.Protocol.Raft.SimpleConfiguration prev_configuration = 1;</code>
       *
       * <pre>
       **
       * The servers in a stable configuration, or the old servers in a
       * transitional configuration.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder> 
          getPrevConfigurationFieldBuilder() {
        if (prevConfigurationBuilder_ == null) {
          prevConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder>(
                  getPrevConfiguration(),
                  getParentForChildren(),
                  isClean());
          prevConfiguration_ = null;
        }
        return prevConfigurationBuilder_;
      }

      private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration nextConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder> nextConfigurationBuilder_;
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public boolean hasNextConfiguration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration getNextConfiguration() {
        if (nextConfigurationBuilder_ == null) {
          return nextConfiguration_;
        } else {
          return nextConfigurationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder setNextConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration value) {
        if (nextConfigurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nextConfiguration_ = value;
          onChanged();
        } else {
          nextConfigurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder setNextConfiguration(
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder builderForValue) {
        if (nextConfigurationBuilder_ == null) {
          nextConfiguration_ = builderForValue.build();
          onChanged();
        } else {
          nextConfigurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder mergeNextConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration value) {
        if (nextConfigurationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              nextConfiguration_ != com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance()) {
            nextConfiguration_ =
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.newBuilder(nextConfiguration_).mergeFrom(value).buildPartial();
          } else {
            nextConfiguration_ = value;
          }
          onChanged();
        } else {
          nextConfigurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public Builder clearNextConfiguration() {
        if (nextConfigurationBuilder_ == null) {
          nextConfiguration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.getDefaultInstance();
          onChanged();
        } else {
          nextConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder getNextConfigurationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNextConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder getNextConfigurationOrBuilder() {
        if (nextConfigurationBuilder_ != null) {
          return nextConfigurationBuilder_.getMessageOrBuilder();
        } else {
          return nextConfiguration_;
        }
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.SimpleConfiguration next_configuration = 2;</code>
       *
       * <pre>
       **
       * Not present in a stable configuration, or the new servers in a
       * transitional configuration.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder> 
          getNextConfigurationFieldBuilder() {
        if (nextConfigurationBuilder_ == null) {
          nextConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfiguration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.SimpleConfigurationOrBuilder>(
                  getNextConfiguration(),
                  getParentForChildren(),
                  isClean());
          nextConfiguration_ = null;
        }
        return nextConfigurationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.Configuration)
    }

    static {
      defaultInstance = new Configuration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.Configuration)
  }

  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.Entry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 term = 1;</code>
     *
     * <pre>
     **
     * The term in which the entry was first created.
     * </pre>
     */
    boolean hasTerm();
    /**
     * <code>required uint64 term = 1;</code>
     *
     * <pre>
     **
     * The term in which the entry was first created.
     * </pre>
     */
    long getTerm();

    /**
     * <code>optional uint64 index = 5;</code>
     *
     * <pre>
     **
     * The index for the entry. It's truly optional (if you receive an entry
     * over the network, you shouldn't rely on this). It's used for followers
     * to check that they've got the entry at the right index and also used
     * internally in some storage backends such as SegmentedLog.
     * </pre>
     */
    boolean hasIndex();
    /**
     * <code>optional uint64 index = 5;</code>
     *
     * <pre>
     **
     * The index for the entry. It's truly optional (if you receive an entry
     * over the network, you shouldn't rely on this). It's used for followers
     * to check that they've got the entry at the right index and also used
     * internally in some storage backends such as SegmentedLog.
     * </pre>
     */
    long getIndex();

    /**
     * <code>required uint64 cluster_time = 6;</code>
     *
     * <pre>
     **
     * Roughly the number of nanoseconds the cluster has had a leader. This
     * gets passed onto state machines, where it's used for cleaning up client
     * sessions. See ClusterClock for more details.
     * </pre>
     */
    boolean hasClusterTime();
    /**
     * <code>required uint64 cluster_time = 6;</code>
     *
     * <pre>
     **
     * Roughly the number of nanoseconds the cluster has had a leader. This
     * gets passed onto state machines, where it's used for cleaning up client
     * sessions. See ClusterClock for more details.
     * </pre>
     */
    long getClusterTime();

    /**
     * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
     *
     * <pre>
     **
     * See EntryType.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
     *
     * <pre>
     **
     * See EntryType.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType getType();

    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    boolean hasConfiguration();
    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration getConfiguration();
    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder getConfigurationOrBuilder();

    /**
     * <code>optional bytes data = 4;</code>
     *
     * <pre>
     **
     * A command to be processed by the state machine.
     * </pre>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 4;</code>
     *
     * <pre>
     **
     * A command to be processed by the state machine.
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.Entry}
   *
   * <pre>
   **
   * Log entry.
   * </pre>
   */
  public static final class Entry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.Entry)
      EntryOrBuilder {
    // Use Entry.newBuilder() to construct.
    private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Entry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Entry defaultInstance;
    public static Entry getDefaultInstance() {
      return defaultInstance;
    }

    public Entry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Entry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              term_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType value = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 26: {
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = configuration_.toBuilder();
              }
              configuration_ = input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(configuration_);
                configuration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 34: {
              bitField0_ |= 0x00000020;
              data_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              index_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              clusterTime_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Entry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Entry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder.class);
    }

    public static com.google.protobuf.Parser<Entry> PARSER =
        new com.google.protobuf.AbstractParser<Entry>() {
      public Entry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Entry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TERM_FIELD_NUMBER = 1;
    private long term_;
    /**
     * <code>required uint64 term = 1;</code>
     *
     * <pre>
     **
     * The term in which the entry was first created.
     * </pre>
     */
    public boolean hasTerm() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 term = 1;</code>
     *
     * <pre>
     **
     * The term in which the entry was first created.
     * </pre>
     */
    public long getTerm() {
      return term_;
    }

    public static final int INDEX_FIELD_NUMBER = 5;
    private long index_;
    /**
     * <code>optional uint64 index = 5;</code>
     *
     * <pre>
     **
     * The index for the entry. It's truly optional (if you receive an entry
     * over the network, you shouldn't rely on this). It's used for followers
     * to check that they've got the entry at the right index and also used
     * internally in some storage backends such as SegmentedLog.
     * </pre>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 index = 5;</code>
     *
     * <pre>
     **
     * The index for the entry. It's truly optional (if you receive an entry
     * over the network, you shouldn't rely on this). It's used for followers
     * to check that they've got the entry at the right index and also used
     * internally in some storage backends such as SegmentedLog.
     * </pre>
     */
    public long getIndex() {
      return index_;
    }

    public static final int CLUSTER_TIME_FIELD_NUMBER = 6;
    private long clusterTime_;
    /**
     * <code>required uint64 cluster_time = 6;</code>
     *
     * <pre>
     **
     * Roughly the number of nanoseconds the cluster has had a leader. This
     * gets passed onto state machines, where it's used for cleaning up client
     * sessions. See ClusterClock for more details.
     * </pre>
     */
    public boolean hasClusterTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 cluster_time = 6;</code>
     *
     * <pre>
     **
     * Roughly the number of nanoseconds the cluster has had a leader. This
     * gets passed onto state machines, where it's used for cleaning up client
     * sessions. See ClusterClock for more details.
     * </pre>
     */
    public long getClusterTime() {
      return clusterTime_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType type_;
    /**
     * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
     *
     * <pre>
     **
     * See EntryType.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
     *
     * <pre>
     **
     * See EntryType.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType getType() {
      return type_;
    }

    public static final int CONFIGURATION_FIELD_NUMBER = 3;
    private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration configuration_;
    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    public boolean hasConfiguration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration getConfiguration() {
      return configuration_;
    }
    /**
     * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
     *
     * <pre>
     **
     * A Configuration to be used internally by the consensus module.
     * </pre>
     */
    public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder getConfigurationOrBuilder() {
      return configuration_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 4;</code>
     *
     * <pre>
     **
     * A command to be processed by the state machine.
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes data = 4;</code>
     *
     * <pre>
     **
     * A command to be processed by the state machine.
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      term_ = 0L;
      index_ = 0L;
      clusterTime_ = 0L;
      type_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType.UNKNOWN;
      configuration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance();
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTerm()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClusterTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasConfiguration()) {
        if (!getConfiguration().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, term_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(3, configuration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(4, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(5, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(6, clusterTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, term_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, configuration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, clusterTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.Entry}
     *
     * <pre>
     **
     * Log entry.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.Entry)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getConfigurationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        term_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        clusterTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType.UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (configurationBuilder_ == null) {
          configuration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance();
        } else {
          configurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_Entry_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.term_ = term_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clusterTime_ = clusterTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (configurationBuilder_ == null) {
          result.configuration_ = configuration_;
        } else {
          result.configuration_ = configurationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.getDefaultInstance()) return this;
        if (other.hasTerm()) {
          setTerm(other.getTerm());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasClusterTime()) {
          setClusterTime(other.getClusterTime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasConfiguration()) {
          mergeConfiguration(other.getConfiguration());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTerm()) {
          
          return false;
        }
        if (!hasClusterTime()) {
          
          return false;
        }
        if (hasConfiguration()) {
          if (!getConfiguration().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long term_ ;
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * The term in which the entry was first created.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * The term in which the entry was first created.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * The term in which the entry was first created.
       * </pre>
       */
      public Builder setTerm(long value) {
        bitField0_ |= 0x00000001;
        term_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * The term in which the entry was first created.
       * </pre>
       */
      public Builder clearTerm() {
        bitField0_ = (bitField0_ & ~0x00000001);
        term_ = 0L;
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <code>optional uint64 index = 5;</code>
       *
       * <pre>
       **
       * The index for the entry. It's truly optional (if you receive an entry
       * over the network, you shouldn't rely on this). It's used for followers
       * to check that they've got the entry at the right index and also used
       * internally in some storage backends such as SegmentedLog.
       * </pre>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 index = 5;</code>
       *
       * <pre>
       **
       * The index for the entry. It's truly optional (if you receive an entry
       * over the network, you shouldn't rely on this). It's used for followers
       * to check that they've got the entry at the right index and also used
       * internally in some storage backends such as SegmentedLog.
       * </pre>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <code>optional uint64 index = 5;</code>
       *
       * <pre>
       **
       * The index for the entry. It's truly optional (if you receive an entry
       * over the network, you shouldn't rely on this). It's used for followers
       * to check that they've got the entry at the right index and also used
       * internally in some storage backends such as SegmentedLog.
       * </pre>
       */
      public Builder setIndex(long value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 index = 5;</code>
       *
       * <pre>
       **
       * The index for the entry. It's truly optional (if you receive an entry
       * over the network, you shouldn't rely on this). It's used for followers
       * to check that they've got the entry at the right index and also used
       * internally in some storage backends such as SegmentedLog.
       * </pre>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0L;
        onChanged();
        return this;
      }

      private long clusterTime_ ;
      /**
       * <code>required uint64 cluster_time = 6;</code>
       *
       * <pre>
       **
       * Roughly the number of nanoseconds the cluster has had a leader. This
       * gets passed onto state machines, where it's used for cleaning up client
       * sessions. See ClusterClock for more details.
       * </pre>
       */
      public boolean hasClusterTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 cluster_time = 6;</code>
       *
       * <pre>
       **
       * Roughly the number of nanoseconds the cluster has had a leader. This
       * gets passed onto state machines, where it's used for cleaning up client
       * sessions. See ClusterClock for more details.
       * </pre>
       */
      public long getClusterTime() {
        return clusterTime_;
      }
      /**
       * <code>required uint64 cluster_time = 6;</code>
       *
       * <pre>
       **
       * Roughly the number of nanoseconds the cluster has had a leader. This
       * gets passed onto state machines, where it's used for cleaning up client
       * sessions. See ClusterClock for more details.
       * </pre>
       */
      public Builder setClusterTime(long value) {
        bitField0_ |= 0x00000004;
        clusterTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 cluster_time = 6;</code>
       *
       * <pre>
       **
       * Roughly the number of nanoseconds the cluster has had a leader. This
       * gets passed onto state machines, where it's used for cleaning up client
       * sessions. See ClusterClock for more details.
       * </pre>
       */
      public Builder clearClusterTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clusterTime_ = 0L;
        onChanged();
        return this;
      }

      private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType type_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType.UNKNOWN;
      /**
       * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
       *
       * <pre>
       **
       * See EntryType.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
       *
       * <pre>
       **
       * See EntryType.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType getType() {
        return type_;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
       *
       * <pre>
       **
       * See EntryType.
       * </pre>
       */
      public Builder setType(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.EntryType type = 2;</code>
       *
       * <pre>
       **
       * See EntryType.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryType.UNKNOWN;
        onChanged();
        return this;
      }

      private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration configuration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder> configurationBuilder_;
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public boolean hasConfiguration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration getConfiguration() {
        if (configurationBuilder_ == null) {
          return configuration_;
        } else {
          return configurationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public Builder setConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration value) {
        if (configurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          configuration_ = value;
          onChanged();
        } else {
          configurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public Builder setConfiguration(
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder builderForValue) {
        if (configurationBuilder_ == null) {
          configuration_ = builderForValue.build();
          onChanged();
        } else {
          configurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public Builder mergeConfiguration(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration value) {
        if (configurationBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              configuration_ != com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance()) {
            configuration_ =
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.newBuilder(configuration_).mergeFrom(value).buildPartial();
          } else {
            configuration_ = value;
          }
          onChanged();
        } else {
          configurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public Builder clearConfiguration() {
        if (configurationBuilder_ == null) {
          configuration_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.getDefaultInstance();
          onChanged();
        } else {
          configurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder getConfigurationBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getConfigurationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder getConfigurationOrBuilder() {
        if (configurationBuilder_ != null) {
          return configurationBuilder_.getMessageOrBuilder();
        } else {
          return configuration_;
        }
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.Configuration configuration = 3;</code>
       *
       * <pre>
       **
       * A Configuration to be used internally by the consensus module.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder> 
          getConfigurationFieldBuilder() {
        if (configurationBuilder_ == null) {
          configurationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Configuration.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.ConfigurationOrBuilder>(
                  getConfiguration(),
                  getParentForChildren(),
                  isClean());
          configuration_ = null;
        }
        return configurationBuilder_;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 4;</code>
       *
       * <pre>
       **
       * A command to be processed by the state machine.
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes data = 4;</code>
       *
       * <pre>
       **
       * A command to be processed by the state machine.
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 4;</code>
       *
       * <pre>
       **
       * A command to be processed by the state machine.
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 4;</code>
       *
       * <pre>
       **
       * A command to be processed by the state machine.
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.Entry)
    }

    static {
      defaultInstance = new Entry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.Entry)
  }

  public interface RequestVoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.RequestVote)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote}
   *
   * <pre>
   **
   * RequestVote RPC: ask a server for its vote in an election and/or get a
   * server's log information.
   * </pre>
   */
  public static final class RequestVote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.RequestVote)
      RequestVoteOrBuilder {
    // Use RequestVote.newBuilder() to construct.
    private RequestVote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RequestVote(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RequestVote defaultInstance;
    public static RequestVote getDefaultInstance() {
      return defaultInstance;
    }

    public RequestVote getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RequestVote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Builder.class);
    }

    public static com.google.protobuf.Parser<RequestVote> PARSER =
        new com.google.protobuf.AbstractParser<RequestVote>() {
      public RequestVote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestVote(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RequestVote> getParserForType() {
      return PARSER;
    }

    public interface RequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.RequestVote.Request)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of the caller, so that if it re-requests the vote from the
       * callee, the server will respond granted.
       * </pre>
       */
      boolean hasServerId();
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of the caller, so that if it re-requests the vote from the
       * callee, the server will respond granted.
       * </pre>
       */
      long getServerId();

      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      long getTerm();

      /**
       * <code>required uint64 last_log_term = 3;</code>
       *
       * <pre>
       **
       * Term of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      boolean hasLastLogTerm();
      /**
       * <code>required uint64 last_log_term = 3;</code>
       *
       * <pre>
       **
       * Term of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      long getLastLogTerm();

      /**
       * <code>required uint64 last_log_index = 4;</code>
       *
       * <pre>
       **
       * ID of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      boolean hasLastLogIndex();
      /**
       * <code>required uint64 last_log_index = 4;</code>
       *
       * <pre>
       **
       * ID of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      long getLastLogIndex();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote.Request}
     */
    public static final class Request extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.RequestVote.Request)
        RequestOrBuilder {
      // Use Request.newBuilder() to construct.
      private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }

      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Request(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                serverId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                term_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                lastLogTerm_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                lastLogIndex_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.Builder.class);
      }

      public static com.google.protobuf.Parser<Request> PARSER =
          new com.google.protobuf.AbstractParser<Request>() {
        public Request parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Request> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SERVER_ID_FIELD_NUMBER = 1;
      private long serverId_;
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of the caller, so that if it re-requests the vote from the
       * callee, the server will respond granted.
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of the caller, so that if it re-requests the vote from the
       * callee, the server will respond granted.
       * </pre>
       */
      public long getServerId() {
        return serverId_;
      }

      public static final int TERM_FIELD_NUMBER = 2;
      private long term_;
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int LAST_LOG_TERM_FIELD_NUMBER = 3;
      private long lastLogTerm_;
      /**
       * <code>required uint64 last_log_term = 3;</code>
       *
       * <pre>
       **
       * Term of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      public boolean hasLastLogTerm() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 last_log_term = 3;</code>
       *
       * <pre>
       **
       * Term of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      public long getLastLogTerm() {
        return lastLogTerm_;
      }

      public static final int LAST_LOG_INDEX_FIELD_NUMBER = 4;
      private long lastLogIndex_;
      /**
       * <code>required uint64 last_log_index = 4;</code>
       *
       * <pre>
       **
       * ID of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      public boolean hasLastLogIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 last_log_index = 4;</code>
       *
       * <pre>
       **
       * ID of last entry in caller's log.
       * Used to compare log completeness.
       * </pre>
       */
      public long getLastLogIndex() {
        return lastLogIndex_;
      }

      private void initFields() {
        serverId_ = 0L;
        term_ = 0L;
        lastLogTerm_ = 0L;
        lastLogIndex_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasServerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLastLogTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLastLogIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, lastLogTerm_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, lastLogIndex_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, lastLogTerm_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, lastLogIndex_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote.Request}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.RequestVote.Request)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.RequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Request_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          serverId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          lastLogTerm_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          lastLogIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.serverId_ = serverId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.lastLogTerm_ = lastLogTerm_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.lastLogIndex_ = lastLogIndex_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request.getDefaultInstance()) return this;
          if (other.hasServerId()) {
            setServerId(other.getServerId());
          }
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasLastLogTerm()) {
            setLastLogTerm(other.getLastLogTerm());
          }
          if (other.hasLastLogIndex()) {
            setLastLogIndex(other.getLastLogIndex());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasServerId()) {
            
            return false;
          }
          if (!hasTerm()) {
            
            return false;
          }
          if (!hasLastLogTerm()) {
            
            return false;
          }
          if (!hasLastLogIndex()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Request) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long serverId_ ;
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of the caller, so that if it re-requests the vote from the
         * callee, the server will respond granted.
         * </pre>
         */
        public boolean hasServerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of the caller, so that if it re-requests the vote from the
         * callee, the server will respond granted.
         * </pre>
         */
        public long getServerId() {
          return serverId_;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of the caller, so that if it re-requests the vote from the
         * callee, the server will respond granted.
         * </pre>
         */
        public Builder setServerId(long value) {
          bitField0_ |= 0x00000001;
          serverId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of the caller, so that if it re-requests the vote from the
         * callee, the server will respond granted.
         * </pre>
         */
        public Builder clearServerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          serverId_ = 0L;
          onChanged();
          return this;
        }

        private long term_ ;
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000002;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          term_ = 0L;
          onChanged();
          return this;
        }

        private long lastLogTerm_ ;
        /**
         * <code>required uint64 last_log_term = 3;</code>
         *
         * <pre>
         **
         * Term of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public boolean hasLastLogTerm() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint64 last_log_term = 3;</code>
         *
         * <pre>
         **
         * Term of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public long getLastLogTerm() {
          return lastLogTerm_;
        }
        /**
         * <code>required uint64 last_log_term = 3;</code>
         *
         * <pre>
         **
         * Term of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public Builder setLastLogTerm(long value) {
          bitField0_ |= 0x00000004;
          lastLogTerm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 last_log_term = 3;</code>
         *
         * <pre>
         **
         * Term of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public Builder clearLastLogTerm() {
          bitField0_ = (bitField0_ & ~0x00000004);
          lastLogTerm_ = 0L;
          onChanged();
          return this;
        }

        private long lastLogIndex_ ;
        /**
         * <code>required uint64 last_log_index = 4;</code>
         *
         * <pre>
         **
         * ID of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public boolean hasLastLogIndex() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint64 last_log_index = 4;</code>
         *
         * <pre>
         **
         * ID of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public long getLastLogIndex() {
          return lastLogIndex_;
        }
        /**
         * <code>required uint64 last_log_index = 4;</code>
         *
         * <pre>
         **
         * ID of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public Builder setLastLogIndex(long value) {
          bitField0_ |= 0x00000008;
          lastLogIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 last_log_index = 4;</code>
         *
         * <pre>
         **
         * ID of last entry in caller's log.
         * Used to compare log completeness.
         * </pre>
         */
        public Builder clearLastLogIndex() {
          bitField0_ = (bitField0_ & ~0x00000008);
          lastLogIndex_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.RequestVote.Request)
      }

      static {
        defaultInstance = new Request(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.RequestVote.Request)
    }

    public interface ResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.RequestVote.Response)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for caller to update itself.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for caller to update itself.
       * </pre>
       */
      long getTerm();

      /**
       * <code>required bool granted = 2;</code>
       *
       * <pre>
       **
       * True if the follower granted the candidate its vote, false
       * otherwise.
       * </pre>
       */
      boolean hasGranted();
      /**
       * <code>required bool granted = 2;</code>
       *
       * <pre>
       **
       * True if the follower granted the candidate its vote, false
       * otherwise.
       * </pre>
       */
      boolean getGranted();

      /**
       * <code>optional bool log_ok = 3;</code>
       *
       * <pre>
       **
       * Set to true if the caller's log is as up-to-date as the recipient's.
       * This isn't presently used, but it's easy to return and might be
       * useful later. In the Pre-Vote extension to Raft described in Section
       * 9.6 "Preventing disruptions when a server rejoins the cluster" of
       * Diego Ongaro's PhD dissertation, a server needs to know if its log
       * is sufficient to get elected before actually starting an election.
       * </pre>
       */
      boolean hasLogOk();
      /**
       * <code>optional bool log_ok = 3;</code>
       *
       * <pre>
       **
       * Set to true if the caller's log is as up-to-date as the recipient's.
       * This isn't presently used, but it's easy to return and might be
       * useful later. In the Pre-Vote extension to Raft described in Section
       * 9.6 "Preventing disruptions when a server rejoins the cluster" of
       * Diego Ongaro's PhD dissertation, a server needs to know if its log
       * is sufficient to get elected before actually starting an election.
       * </pre>
       */
      boolean getLogOk();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote.Response}
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.RequestVote.Response)
        ResponseOrBuilder {
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }

      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                term_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                granted_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                logOk_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.Builder.class);
      }

      public static com.google.protobuf.Parser<Response> PARSER =
          new com.google.protobuf.AbstractParser<Response>() {
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TERM_FIELD_NUMBER = 1;
      private long term_;
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for caller to update itself.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for caller to update itself.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int GRANTED_FIELD_NUMBER = 2;
      private boolean granted_;
      /**
       * <code>required bool granted = 2;</code>
       *
       * <pre>
       **
       * True if the follower granted the candidate its vote, false
       * otherwise.
       * </pre>
       */
      public boolean hasGranted() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool granted = 2;</code>
       *
       * <pre>
       **
       * True if the follower granted the candidate its vote, false
       * otherwise.
       * </pre>
       */
      public boolean getGranted() {
        return granted_;
      }

      public static final int LOG_OK_FIELD_NUMBER = 3;
      private boolean logOk_;
      /**
       * <code>optional bool log_ok = 3;</code>
       *
       * <pre>
       **
       * Set to true if the caller's log is as up-to-date as the recipient's.
       * This isn't presently used, but it's easy to return and might be
       * useful later. In the Pre-Vote extension to Raft described in Section
       * 9.6 "Preventing disruptions when a server rejoins the cluster" of
       * Diego Ongaro's PhD dissertation, a server needs to know if its log
       * is sufficient to get elected before actually starting an election.
       * </pre>
       */
      public boolean hasLogOk() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool log_ok = 3;</code>
       *
       * <pre>
       **
       * Set to true if the caller's log is as up-to-date as the recipient's.
       * This isn't presently used, but it's easy to return and might be
       * useful later. In the Pre-Vote extension to Raft described in Section
       * 9.6 "Preventing disruptions when a server rejoins the cluster" of
       * Diego Ongaro's PhD dissertation, a server needs to know if its log
       * is sufficient to get elected before actually starting an election.
       * </pre>
       */
      public boolean getLogOk() {
        return logOk_;
      }

      private void initFields() {
        term_ = 0L;
        granted_ = false;
        logOk_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGranted()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, granted_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, logOk_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, granted_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, logOk_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote.Response}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.RequestVote.Response)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          granted_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          logOk_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.granted_ = granted_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.logOk_ = logOk_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response.getDefaultInstance()) return this;
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasGranted()) {
            setGranted(other.getGranted());
          }
          if (other.hasLogOk()) {
            setLogOk(other.getLogOk());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTerm()) {
            
            return false;
          }
          if (!hasGranted()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Response) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long term_ ;
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for caller to update itself.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for caller to update itself.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for caller to update itself.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000001;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for caller to update itself.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          onChanged();
          return this;
        }

        private boolean granted_ ;
        /**
         * <code>required bool granted = 2;</code>
         *
         * <pre>
         **
         * True if the follower granted the candidate its vote, false
         * otherwise.
         * </pre>
         */
        public boolean hasGranted() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool granted = 2;</code>
         *
         * <pre>
         **
         * True if the follower granted the candidate its vote, false
         * otherwise.
         * </pre>
         */
        public boolean getGranted() {
          return granted_;
        }
        /**
         * <code>required bool granted = 2;</code>
         *
         * <pre>
         **
         * True if the follower granted the candidate its vote, false
         * otherwise.
         * </pre>
         */
        public Builder setGranted(boolean value) {
          bitField0_ |= 0x00000002;
          granted_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool granted = 2;</code>
         *
         * <pre>
         **
         * True if the follower granted the candidate its vote, false
         * otherwise.
         * </pre>
         */
        public Builder clearGranted() {
          bitField0_ = (bitField0_ & ~0x00000002);
          granted_ = false;
          onChanged();
          return this;
        }

        private boolean logOk_ ;
        /**
         * <code>optional bool log_ok = 3;</code>
         *
         * <pre>
         **
         * Set to true if the caller's log is as up-to-date as the recipient's.
         * This isn't presently used, but it's easy to return and might be
         * useful later. In the Pre-Vote extension to Raft described in Section
         * 9.6 "Preventing disruptions when a server rejoins the cluster" of
         * Diego Ongaro's PhD dissertation, a server needs to know if its log
         * is sufficient to get elected before actually starting an election.
         * </pre>
         */
        public boolean hasLogOk() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool log_ok = 3;</code>
         *
         * <pre>
         **
         * Set to true if the caller's log is as up-to-date as the recipient's.
         * This isn't presently used, but it's easy to return and might be
         * useful later. In the Pre-Vote extension to Raft described in Section
         * 9.6 "Preventing disruptions when a server rejoins the cluster" of
         * Diego Ongaro's PhD dissertation, a server needs to know if its log
         * is sufficient to get elected before actually starting an election.
         * </pre>
         */
        public boolean getLogOk() {
          return logOk_;
        }
        /**
         * <code>optional bool log_ok = 3;</code>
         *
         * <pre>
         **
         * Set to true if the caller's log is as up-to-date as the recipient's.
         * This isn't presently used, but it's easy to return and might be
         * useful later. In the Pre-Vote extension to Raft described in Section
         * 9.6 "Preventing disruptions when a server rejoins the cluster" of
         * Diego Ongaro's PhD dissertation, a server needs to know if its log
         * is sufficient to get elected before actually starting an election.
         * </pre>
         */
        public Builder setLogOk(boolean value) {
          bitField0_ |= 0x00000004;
          logOk_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool log_ok = 3;</code>
         *
         * <pre>
         **
         * Set to true if the caller's log is as up-to-date as the recipient's.
         * This isn't presently used, but it's easy to return and might be
         * useful later. In the Pre-Vote extension to Raft described in Section
         * 9.6 "Preventing disruptions when a server rejoins the cluster" of
         * Diego Ongaro's PhD dissertation, a server needs to know if its log
         * is sufficient to get elected before actually starting an election.
         * </pre>
         */
        public Builder clearLogOk() {
          bitField0_ = (bitField0_ & ~0x00000004);
          logOk_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.RequestVote.Response)
      }

      static {
        defaultInstance = new Response(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.RequestVote.Response)
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.RequestVote}
     *
     * <pre>
     **
     * RequestVote RPC: ask a server for its vote in an election and/or get a
     * server's log information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.RequestVote)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.RequestVote) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.RequestVote)
    }

    static {
      defaultInstance = new RequestVote(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.RequestVote)
  }

  public interface AppendEntriesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.AppendEntries)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries}
   *
   * <pre>
   **
   * AppendEntries RPC: replicate log entries to a follower.
   * </pre>
   */
  public static final class AppendEntries extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.AppendEntries)
      AppendEntriesOrBuilder {
    // Use AppendEntries.newBuilder() to construct.
    private AppendEntries(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AppendEntries(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AppendEntries defaultInstance;
    public static AppendEntries getDefaultInstance() {
      return defaultInstance;
    }

    public AppendEntries getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AppendEntries(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Builder.class);
    }

    public static com.google.protobuf.Parser<AppendEntries> PARSER =
        new com.google.protobuf.AbstractParser<AppendEntries>() {
      public AppendEntries parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AppendEntries(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AppendEntries> getParserForType() {
      return PARSER;
    }

    public interface RequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.AppendEntries.Request)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      boolean hasServerId();
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      long getServerId();

      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      long getTerm();

      /**
       * <code>required uint64 prev_log_index = 3;</code>
       *
       * <pre>
       **
       * ID of entry preceding entries, or ID of last log entry for
       * heartbeat.
       * </pre>
       */
      boolean hasPrevLogIndex();
      /**
       * <code>required uint64 prev_log_index = 3;</code>
       *
       * <pre>
       **
       * ID of entry preceding entries, or ID of last log entry for
       * heartbeat.
       * </pre>
       */
      long getPrevLogIndex();

      /**
       * <code>required uint64 prev_log_term = 4;</code>
       *
       * <pre>
       **
       * Term of prev_log_index.
       * </pre>
       */
      boolean hasPrevLogTerm();
      /**
       * <code>required uint64 prev_log_term = 4;</code>
       *
       * <pre>
       **
       * Term of prev_log_index.
       * </pre>
       */
      long getPrevLogTerm();

      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> 
          getEntriesList();
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry getEntries(int index);
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      int getEntriesCount();
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder> 
          getEntriesOrBuilderList();
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder getEntriesOrBuilder(
          int index);

      /**
       * <code>required uint64 commit_index = 6;</code>
       *
       * <pre>
       **
       * Last committed entry that the follower has, so the follower can
       * advance its state machine.
       * </pre>
       */
      boolean hasCommitIndex();
      /**
       * <code>required uint64 commit_index = 6;</code>
       *
       * <pre>
       **
       * Last committed entry that the follower has, so the follower can
       * advance its state machine.
       * </pre>
       */
      long getCommitIndex();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Request}
     */
    public static final class Request extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.AppendEntries.Request)
        RequestOrBuilder {
      // Use Request.newBuilder() to construct.
      private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }

      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Request(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                serverId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                term_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                prevLogIndex_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                prevLogTerm_ = input.readUInt64();
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  entries_ = new java.util.ArrayList<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry>();
                  mutable_bitField0_ |= 0x00000010;
                }
                entries_.add(input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.PARSER, extensionRegistry));
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                commitIndex_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.Builder.class);
      }

      public static com.google.protobuf.Parser<Request> PARSER =
          new com.google.protobuf.AbstractParser<Request>() {
        public Request parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Request> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SERVER_ID_FIELD_NUMBER = 1;
      private long serverId_;
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      public long getServerId() {
        return serverId_;
      }

      public static final int TERM_FIELD_NUMBER = 2;
      private long term_;
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 term = 2;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int PREV_LOG_INDEX_FIELD_NUMBER = 3;
      private long prevLogIndex_;
      /**
       * <code>required uint64 prev_log_index = 3;</code>
       *
       * <pre>
       **
       * ID of entry preceding entries, or ID of last log entry for
       * heartbeat.
       * </pre>
       */
      public boolean hasPrevLogIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 prev_log_index = 3;</code>
       *
       * <pre>
       **
       * ID of entry preceding entries, or ID of last log entry for
       * heartbeat.
       * </pre>
       */
      public long getPrevLogIndex() {
        return prevLogIndex_;
      }

      public static final int PREV_LOG_TERM_FIELD_NUMBER = 4;
      private long prevLogTerm_;
      /**
       * <code>required uint64 prev_log_term = 4;</code>
       *
       * <pre>
       **
       * Term of prev_log_index.
       * </pre>
       */
      public boolean hasPrevLogTerm() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 prev_log_term = 4;</code>
       *
       * <pre>
       **
       * Term of prev_log_index.
       * </pre>
       */
      public long getPrevLogTerm() {
        return prevLogTerm_;
      }

      public static final int ENTRIES_FIELD_NUMBER = 5;
      private java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> entries_;
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> getEntriesList() {
        return entries_;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      public java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder> 
          getEntriesOrBuilderList() {
        return entries_;
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      public int getEntriesCount() {
        return entries_.size();
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry getEntries(int index) {
        return entries_.get(index);
      }
      /**
       * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
       *
       * <pre>
       **
       * Log entries for follower to store, or empty for heartbeat.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder getEntriesOrBuilder(
          int index) {
        return entries_.get(index);
      }

      public static final int COMMIT_INDEX_FIELD_NUMBER = 6;
      private long commitIndex_;
      /**
       * <code>required uint64 commit_index = 6;</code>
       *
       * <pre>
       **
       * Last committed entry that the follower has, so the follower can
       * advance its state machine.
       * </pre>
       */
      public boolean hasCommitIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint64 commit_index = 6;</code>
       *
       * <pre>
       **
       * Last committed entry that the follower has, so the follower can
       * advance its state machine.
       * </pre>
       */
      public long getCommitIndex() {
        return commitIndex_;
      }

      private void initFields() {
        serverId_ = 0L;
        term_ = 0L;
        prevLogIndex_ = 0L;
        prevLogTerm_ = 0L;
        entries_ = java.util.Collections.emptyList();
        commitIndex_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasServerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPrevLogIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPrevLogTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCommitIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getEntriesCount(); i++) {
          if (!getEntries(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, prevLogIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, prevLogTerm_);
        }
        for (int i = 0; i < entries_.size(); i++) {
          output.writeMessage(5, entries_.get(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt64(6, commitIndex_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, prevLogIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, prevLogTerm_);
        }
        for (int i = 0; i < entries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, entries_.get(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, commitIndex_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Request}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.AppendEntries.Request)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.RequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getEntriesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          serverId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          prevLogIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          prevLogTerm_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (entriesBuilder_ == null) {
            entries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            entriesBuilder_.clear();
          }
          commitIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.serverId_ = serverId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.prevLogIndex_ = prevLogIndex_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.prevLogTerm_ = prevLogTerm_;
          if (entriesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              entries_ = java.util.Collections.unmodifiableList(entries_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.entries_ = entries_;
          } else {
            result.entries_ = entriesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000010;
          }
          result.commitIndex_ = commitIndex_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request.getDefaultInstance()) return this;
          if (other.hasServerId()) {
            setServerId(other.getServerId());
          }
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasPrevLogIndex()) {
            setPrevLogIndex(other.getPrevLogIndex());
          }
          if (other.hasPrevLogTerm()) {
            setPrevLogTerm(other.getPrevLogTerm());
          }
          if (entriesBuilder_ == null) {
            if (!other.entries_.isEmpty()) {
              if (entries_.isEmpty()) {
                entries_ = other.entries_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureEntriesIsMutable();
                entries_.addAll(other.entries_);
              }
              onChanged();
            }
          } else {
            if (!other.entries_.isEmpty()) {
              if (entriesBuilder_.isEmpty()) {
                entriesBuilder_.dispose();
                entriesBuilder_ = null;
                entries_ = other.entries_;
                bitField0_ = (bitField0_ & ~0x00000010);
                entriesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getEntriesFieldBuilder() : null;
              } else {
                entriesBuilder_.addAllMessages(other.entries_);
              }
            }
          }
          if (other.hasCommitIndex()) {
            setCommitIndex(other.getCommitIndex());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasServerId()) {
            
            return false;
          }
          if (!hasTerm()) {
            
            return false;
          }
          if (!hasPrevLogIndex()) {
            
            return false;
          }
          if (!hasPrevLogTerm()) {
            
            return false;
          }
          if (!hasCommitIndex()) {
            
            return false;
          }
          for (int i = 0; i < getEntriesCount(); i++) {
            if (!getEntries(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Request) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long serverId_ ;
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public boolean hasServerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public long getServerId() {
          return serverId_;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public Builder setServerId(long value) {
          bitField0_ |= 0x00000001;
          serverId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public Builder clearServerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          serverId_ = 0L;
          onChanged();
          return this;
        }

        private long term_ ;
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000002;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 2;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          term_ = 0L;
          onChanged();
          return this;
        }

        private long prevLogIndex_ ;
        /**
         * <code>required uint64 prev_log_index = 3;</code>
         *
         * <pre>
         **
         * ID of entry preceding entries, or ID of last log entry for
         * heartbeat.
         * </pre>
         */
        public boolean hasPrevLogIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint64 prev_log_index = 3;</code>
         *
         * <pre>
         **
         * ID of entry preceding entries, or ID of last log entry for
         * heartbeat.
         * </pre>
         */
        public long getPrevLogIndex() {
          return prevLogIndex_;
        }
        /**
         * <code>required uint64 prev_log_index = 3;</code>
         *
         * <pre>
         **
         * ID of entry preceding entries, or ID of last log entry for
         * heartbeat.
         * </pre>
         */
        public Builder setPrevLogIndex(long value) {
          bitField0_ |= 0x00000004;
          prevLogIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 prev_log_index = 3;</code>
         *
         * <pre>
         **
         * ID of entry preceding entries, or ID of last log entry for
         * heartbeat.
         * </pre>
         */
        public Builder clearPrevLogIndex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          prevLogIndex_ = 0L;
          onChanged();
          return this;
        }

        private long prevLogTerm_ ;
        /**
         * <code>required uint64 prev_log_term = 4;</code>
         *
         * <pre>
         **
         * Term of prev_log_index.
         * </pre>
         */
        public boolean hasPrevLogTerm() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint64 prev_log_term = 4;</code>
         *
         * <pre>
         **
         * Term of prev_log_index.
         * </pre>
         */
        public long getPrevLogTerm() {
          return prevLogTerm_;
        }
        /**
         * <code>required uint64 prev_log_term = 4;</code>
         *
         * <pre>
         **
         * Term of prev_log_index.
         * </pre>
         */
        public Builder setPrevLogTerm(long value) {
          bitField0_ |= 0x00000008;
          prevLogTerm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 prev_log_term = 4;</code>
         *
         * <pre>
         **
         * Term of prev_log_index.
         * </pre>
         */
        public Builder clearPrevLogTerm() {
          bitField0_ = (bitField0_ & ~0x00000008);
          prevLogTerm_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> entries_ =
          java.util.Collections.emptyList();
        private void ensureEntriesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            entries_ = new java.util.ArrayList<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry>(entries_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder> entriesBuilder_;

        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> getEntriesList() {
          if (entriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(entries_);
          } else {
            return entriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public int getEntriesCount() {
          if (entriesBuilder_ == null) {
            return entries_.size();
          } else {
            return entriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry getEntries(int index) {
          if (entriesBuilder_ == null) {
            return entries_.get(index);
          } else {
            return entriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder setEntries(
            int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.set(index, value);
            onChanged();
          } else {
            entriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder setEntries(
            int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.set(index, builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder addEntries(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.add(value);
            onChanged();
          } else {
            entriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder addEntries(
            int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.add(index, value);
            onChanged();
          } else {
            entriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder addEntries(
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.add(builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder addEntries(
            int index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.add(index, builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder addAllEntries(
            java.lang.Iterable<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry> values) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, entries_);
            onChanged();
          } else {
            entriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder clearEntries() {
          if (entriesBuilder_ == null) {
            entries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            entriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public Builder removeEntries(int index) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.remove(index);
            onChanged();
          } else {
            entriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder getEntriesBuilder(
            int index) {
          return getEntriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder getEntriesOrBuilder(
            int index) {
          if (entriesBuilder_ == null) {
            return entries_.get(index);  } else {
            return entriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public java.util.List<? extends com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder> 
             getEntriesOrBuilderList() {
          if (entriesBuilder_ != null) {
            return entriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(entries_);
          }
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder addEntriesBuilder() {
          return getEntriesFieldBuilder().addBuilder(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder addEntriesBuilder(
            int index) {
          return getEntriesFieldBuilder().addBuilder(
              index, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .LogCabin.Protocol.Raft.Entry entries = 5;</code>
         *
         * <pre>
         **
         * Log entries for follower to store, or empty for heartbeat.
         * </pre>
         */
        public java.util.List<com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder> 
             getEntriesBuilderList() {
          return getEntriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder> 
            getEntriesFieldBuilder() {
          if (entriesBuilder_ == null) {
            entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.Entry.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.EntryOrBuilder>(
                    entries_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            entries_ = null;
          }
          return entriesBuilder_;
        }

        private long commitIndex_ ;
        /**
         * <code>required uint64 commit_index = 6;</code>
         *
         * <pre>
         **
         * Last committed entry that the follower has, so the follower can
         * advance its state machine.
         * </pre>
         */
        public boolean hasCommitIndex() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required uint64 commit_index = 6;</code>
         *
         * <pre>
         **
         * Last committed entry that the follower has, so the follower can
         * advance its state machine.
         * </pre>
         */
        public long getCommitIndex() {
          return commitIndex_;
        }
        /**
         * <code>required uint64 commit_index = 6;</code>
         *
         * <pre>
         **
         * Last committed entry that the follower has, so the follower can
         * advance its state machine.
         * </pre>
         */
        public Builder setCommitIndex(long value) {
          bitField0_ |= 0x00000020;
          commitIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 commit_index = 6;</code>
         *
         * <pre>
         **
         * Last committed entry that the follower has, so the follower can
         * advance its state machine.
         * </pre>
         */
        public Builder clearCommitIndex() {
          bitField0_ = (bitField0_ & ~0x00000020);
          commitIndex_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.AppendEntries.Request)
      }

      static {
        defaultInstance = new Request(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.AppendEntries.Request)
    }

    public interface ResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.AppendEntries.Response)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      long getTerm();

      /**
       * <code>required bool success = 2;</code>
       *
       * <pre>
       **
       * True if new entries were added to the log.
       * </pre>
       */
      boolean hasSuccess();
      /**
       * <code>required bool success = 2;</code>
       *
       * <pre>
       **
       * True if new entries were added to the log.
       * </pre>
       */
      boolean getSuccess();

      /**
       * <code>optional uint64 last_log_index = 3;</code>
       *
       * <pre>
       **
       * The recipient's last log index (after it's applied this RPC's
       * changes to the log). This is used to speed up finding the correct
       * value for nextIndex with a follower that is far behind the leader.
       * </pre>
       */
      boolean hasLastLogIndex();
      /**
       * <code>optional uint64 last_log_index = 3;</code>
       *
       * <pre>
       **
       * The recipient's last log index (after it's applied this RPC's
       * changes to the log). This is used to speed up finding the correct
       * value for nextIndex with a follower that is far behind the leader.
       * </pre>
       */
      long getLastLogIndex();

      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      boolean hasServerCapabilities();
      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities getServerCapabilities();
      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder getServerCapabilitiesOrBuilder();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Response}
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.AppendEntries.Response)
        ResponseOrBuilder {
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }

      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                term_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                success_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                lastLogIndex_ = input.readUInt64();
                break;
              }
              case 34: {
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = serverCapabilities_.toBuilder();
                }
                serverCapabilities_ = input.readMessage(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(serverCapabilities_);
                  serverCapabilities_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.Builder.class);
      }

      public static com.google.protobuf.Parser<Response> PARSER =
          new com.google.protobuf.AbstractParser<Response>() {
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      public interface ServerCapabilitiesOrBuilder extends
          // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 min_supported_state_machine_version = 1;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        boolean hasMinSupportedStateMachineVersion();
        /**
         * <code>optional uint32 min_supported_state_machine_version = 1;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        int getMinSupportedStateMachineVersion();

        /**
         * <code>optional uint32 max_supported_state_machine_version = 2;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        boolean hasMaxSupportedStateMachineVersion();
        /**
         * <code>optional uint32 max_supported_state_machine_version = 2;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        int getMaxSupportedStateMachineVersion();
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities}
       */
      public static final class ServerCapabilities extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)
          ServerCapabilitiesOrBuilder {
        // Use ServerCapabilities.newBuilder() to construct.
        private ServerCapabilities(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private ServerCapabilities(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ServerCapabilities defaultInstance;
        public static ServerCapabilities getDefaultInstance() {
          return defaultInstance;
        }

        public ServerCapabilities getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private ServerCapabilities(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  minSupportedStateMachineVersion_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  maxSupportedStateMachineVersion_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder.class);
        }

        public static com.google.protobuf.Parser<ServerCapabilities> PARSER =
            new com.google.protobuf.AbstractParser<ServerCapabilities>() {
          public ServerCapabilities parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ServerCapabilities(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ServerCapabilities> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int MIN_SUPPORTED_STATE_MACHINE_VERSION_FIELD_NUMBER = 1;
        private int minSupportedStateMachineVersion_;
        /**
         * <code>optional uint32 min_supported_state_machine_version = 1;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        public boolean hasMinSupportedStateMachineVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 min_supported_state_machine_version = 1;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        public int getMinSupportedStateMachineVersion() {
          return minSupportedStateMachineVersion_;
        }

        public static final int MAX_SUPPORTED_STATE_MACHINE_VERSION_FIELD_NUMBER = 2;
        private int maxSupportedStateMachineVersion_;
        /**
         * <code>optional uint32 max_supported_state_machine_version = 2;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        public boolean hasMaxSupportedStateMachineVersion() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 max_supported_state_machine_version = 2;</code>
         *
         * <pre>
         **
         * The server's state machine can behave like all state machine
         * versions between min_supported_state_machine_version and
         * max_supported_state_machine_version, inclusive.
         * </pre>
         */
        public int getMaxSupportedStateMachineVersion() {
          return maxSupportedStateMachineVersion_;
        }

        private void initFields() {
          minSupportedStateMachineVersion_ = 0;
          maxSupportedStateMachineVersion_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, minSupportedStateMachineVersion_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, maxSupportedStateMachineVersion_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, minSupportedStateMachineVersion_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, maxSupportedStateMachineVersion_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder.class);
          }

          // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            minSupportedStateMachineVersion_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            maxSupportedStateMachineVersion_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor;
          }

          public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities getDefaultInstanceForType() {
            return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance();
          }

          public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities build() {
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities buildPartial() {
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.minSupportedStateMachineVersion_ = minSupportedStateMachineVersion_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.maxSupportedStateMachineVersion_ = maxSupportedStateMachineVersion_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities) {
              return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities other) {
            if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance()) return this;
            if (other.hasMinSupportedStateMachineVersion()) {
              setMinSupportedStateMachineVersion(other.getMinSupportedStateMachineVersion());
            }
            if (other.hasMaxSupportedStateMachineVersion()) {
              setMaxSupportedStateMachineVersion(other.getMaxSupportedStateMachineVersion());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int minSupportedStateMachineVersion_ ;
          /**
           * <code>optional uint32 min_supported_state_machine_version = 1;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public boolean hasMinSupportedStateMachineVersion() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 min_supported_state_machine_version = 1;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public int getMinSupportedStateMachineVersion() {
            return minSupportedStateMachineVersion_;
          }
          /**
           * <code>optional uint32 min_supported_state_machine_version = 1;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public Builder setMinSupportedStateMachineVersion(int value) {
            bitField0_ |= 0x00000001;
            minSupportedStateMachineVersion_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 min_supported_state_machine_version = 1;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public Builder clearMinSupportedStateMachineVersion() {
            bitField0_ = (bitField0_ & ~0x00000001);
            minSupportedStateMachineVersion_ = 0;
            onChanged();
            return this;
          }

          private int maxSupportedStateMachineVersion_ ;
          /**
           * <code>optional uint32 max_supported_state_machine_version = 2;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public boolean hasMaxSupportedStateMachineVersion() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 max_supported_state_machine_version = 2;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public int getMaxSupportedStateMachineVersion() {
            return maxSupportedStateMachineVersion_;
          }
          /**
           * <code>optional uint32 max_supported_state_machine_version = 2;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public Builder setMaxSupportedStateMachineVersion(int value) {
            bitField0_ |= 0x00000002;
            maxSupportedStateMachineVersion_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 max_supported_state_machine_version = 2;</code>
           *
           * <pre>
           **
           * The server's state machine can behave like all state machine
           * versions between min_supported_state_machine_version and
           * max_supported_state_machine_version, inclusive.
           * </pre>
           */
          public Builder clearMaxSupportedStateMachineVersion() {
            bitField0_ = (bitField0_ & ~0x00000002);
            maxSupportedStateMachineVersion_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)
        }

        static {
          defaultInstance = new ServerCapabilities(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities)
      }

      private int bitField0_;
      public static final int TERM_FIELD_NUMBER = 1;
      private long term_;
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int SUCCESS_FIELD_NUMBER = 2;
      private boolean success_;
      /**
       * <code>required bool success = 2;</code>
       *
       * <pre>
       **
       * True if new entries were added to the log.
       * </pre>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool success = 2;</code>
       *
       * <pre>
       **
       * True if new entries were added to the log.
       * </pre>
       */
      public boolean getSuccess() {
        return success_;
      }

      public static final int LAST_LOG_INDEX_FIELD_NUMBER = 3;
      private long lastLogIndex_;
      /**
       * <code>optional uint64 last_log_index = 3;</code>
       *
       * <pre>
       **
       * The recipient's last log index (after it's applied this RPC's
       * changes to the log). This is used to speed up finding the correct
       * value for nextIndex with a follower that is far behind the leader.
       * </pre>
       */
      public boolean hasLastLogIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 last_log_index = 3;</code>
       *
       * <pre>
       **
       * The recipient's last log index (after it's applied this RPC's
       * changes to the log). This is used to speed up finding the correct
       * value for nextIndex with a follower that is far behind the leader.
       * </pre>
       */
      public long getLastLogIndex() {
        return lastLogIndex_;
      }

      public static final int SERVER_CAPABILITIES_FIELD_NUMBER = 4;
      private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities serverCapabilities_;
      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      public boolean hasServerCapabilities() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities getServerCapabilities() {
        return serverCapabilities_;
      }
      /**
       * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
       *
       * <pre>
       **
       * Sent back to inform leader of what code the recipient is running.
       * </pre>
       */
      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder getServerCapabilitiesOrBuilder() {
        return serverCapabilities_;
      }

      private void initFields() {
        term_ = 0L;
        success_ = false;
        lastLogIndex_ = 0L;
        serverCapabilities_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSuccess()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, success_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, lastLogIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, serverCapabilities_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, success_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, lastLogIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, serverCapabilities_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries.Response}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.AppendEntries.Response)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getServerCapabilitiesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          success_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          lastLogIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          if (serverCapabilitiesBuilder_ == null) {
            serverCapabilities_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance();
          } else {
            serverCapabilitiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.success_ = success_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.lastLogIndex_ = lastLogIndex_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (serverCapabilitiesBuilder_ == null) {
            result.serverCapabilities_ = serverCapabilities_;
          } else {
            result.serverCapabilities_ = serverCapabilitiesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.getDefaultInstance()) return this;
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasSuccess()) {
            setSuccess(other.getSuccess());
          }
          if (other.hasLastLogIndex()) {
            setLastLogIndex(other.getLastLogIndex());
          }
          if (other.hasServerCapabilities()) {
            mergeServerCapabilities(other.getServerCapabilities());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTerm()) {
            
            return false;
          }
          if (!hasSuccess()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long term_ ;
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000001;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          onChanged();
          return this;
        }

        private boolean success_ ;
        /**
         * <code>required bool success = 2;</code>
         *
         * <pre>
         **
         * True if new entries were added to the log.
         * </pre>
         */
        public boolean hasSuccess() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool success = 2;</code>
         *
         * <pre>
         **
         * True if new entries were added to the log.
         * </pre>
         */
        public boolean getSuccess() {
          return success_;
        }
        /**
         * <code>required bool success = 2;</code>
         *
         * <pre>
         **
         * True if new entries were added to the log.
         * </pre>
         */
        public Builder setSuccess(boolean value) {
          bitField0_ |= 0x00000002;
          success_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool success = 2;</code>
         *
         * <pre>
         **
         * True if new entries were added to the log.
         * </pre>
         */
        public Builder clearSuccess() {
          bitField0_ = (bitField0_ & ~0x00000002);
          success_ = false;
          onChanged();
          return this;
        }

        private long lastLogIndex_ ;
        /**
         * <code>optional uint64 last_log_index = 3;</code>
         *
         * <pre>
         **
         * The recipient's last log index (after it's applied this RPC's
         * changes to the log). This is used to speed up finding the correct
         * value for nextIndex with a follower that is far behind the leader.
         * </pre>
         */
        public boolean hasLastLogIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 last_log_index = 3;</code>
         *
         * <pre>
         **
         * The recipient's last log index (after it's applied this RPC's
         * changes to the log). This is used to speed up finding the correct
         * value for nextIndex with a follower that is far behind the leader.
         * </pre>
         */
        public long getLastLogIndex() {
          return lastLogIndex_;
        }
        /**
         * <code>optional uint64 last_log_index = 3;</code>
         *
         * <pre>
         **
         * The recipient's last log index (after it's applied this RPC's
         * changes to the log). This is used to speed up finding the correct
         * value for nextIndex with a follower that is far behind the leader.
         * </pre>
         */
        public Builder setLastLogIndex(long value) {
          bitField0_ |= 0x00000004;
          lastLogIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 last_log_index = 3;</code>
         *
         * <pre>
         **
         * The recipient's last log index (after it's applied this RPC's
         * changes to the log). This is used to speed up finding the correct
         * value for nextIndex with a follower that is far behind the leader.
         * </pre>
         */
        public Builder clearLastLogIndex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          lastLogIndex_ = 0L;
          onChanged();
          return this;
        }

        private com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities serverCapabilities_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder> serverCapabilitiesBuilder_;
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public boolean hasServerCapabilities() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities getServerCapabilities() {
          if (serverCapabilitiesBuilder_ == null) {
            return serverCapabilities_;
          } else {
            return serverCapabilitiesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public Builder setServerCapabilities(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities value) {
          if (serverCapabilitiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            serverCapabilities_ = value;
            onChanged();
          } else {
            serverCapabilitiesBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public Builder setServerCapabilities(
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder builderForValue) {
          if (serverCapabilitiesBuilder_ == null) {
            serverCapabilities_ = builderForValue.build();
            onChanged();
          } else {
            serverCapabilitiesBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public Builder mergeServerCapabilities(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities value) {
          if (serverCapabilitiesBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                serverCapabilities_ != com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance()) {
              serverCapabilities_ =
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.newBuilder(serverCapabilities_).mergeFrom(value).buildPartial();
            } else {
              serverCapabilities_ = value;
            }
            onChanged();
          } else {
            serverCapabilitiesBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public Builder clearServerCapabilities() {
          if (serverCapabilitiesBuilder_ == null) {
            serverCapabilities_ = com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.getDefaultInstance();
            onChanged();
          } else {
            serverCapabilitiesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder getServerCapabilitiesBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getServerCapabilitiesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder getServerCapabilitiesOrBuilder() {
          if (serverCapabilitiesBuilder_ != null) {
            return serverCapabilitiesBuilder_.getMessageOrBuilder();
          } else {
            return serverCapabilities_;
          }
        }
        /**
         * <code>optional .LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities server_capabilities = 4;</code>
         *
         * <pre>
         **
         * Sent back to inform leader of what code the recipient is running.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder> 
            getServerCapabilitiesFieldBuilder() {
          if (serverCapabilitiesBuilder_ == null) {
            serverCapabilitiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilities.Builder, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Response.ServerCapabilitiesOrBuilder>(
                    getServerCapabilities(),
                    getParentForChildren(),
                    isClean());
            serverCapabilities_ = null;
          }
          return serverCapabilitiesBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.AppendEntries.Response)
      }

      static {
        defaultInstance = new Response(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.AppendEntries.Response)
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.AppendEntries}
     *
     * <pre>
     **
     * AppendEntries RPC: replicate log entries to a follower.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.AppendEntries)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntriesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.AppendEntries) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.AppendEntries)
    }

    static {
      defaultInstance = new AppendEntries(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.AppendEntries)
  }

  public interface InstallSnapshotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.InstallSnapshot)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot}
   *
   * <pre>
   **
   * InstallSnapshot RPC: replicate part of a snapshot file to a follower.
   * </pre>
   */
  public static final class InstallSnapshot extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.InstallSnapshot)
      InstallSnapshotOrBuilder {
    // Use InstallSnapshot.newBuilder() to construct.
    private InstallSnapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InstallSnapshot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InstallSnapshot defaultInstance;
    public static InstallSnapshot getDefaultInstance() {
      return defaultInstance;
    }

    public InstallSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InstallSnapshot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Builder.class);
    }

    public static com.google.protobuf.Parser<InstallSnapshot> PARSER =
        new com.google.protobuf.AbstractParser<InstallSnapshot>() {
      public InstallSnapshot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstallSnapshot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InstallSnapshot> getParserForType() {
      return PARSER;
    }

    public interface RequestOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.InstallSnapshot.Request)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      boolean hasServerId();
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      long getServerId();

      /**
       * <code>required uint64 term = 3;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 3;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      long getTerm();

      /**
       * <code>required uint64 last_snapshot_index = 4;</code>
       *
       * <pre>
       **
       * The snapshot covers log entries in the range [1, lastSnapshotIndex].
       * While this information can be found in the snapshot itself, a
       * follower may want to know sooner (for example, to name the snapshot
       * file or to assert that it's not overwriting something more
       * important).
       * </pre>
       */
      boolean hasLastSnapshotIndex();
      /**
       * <code>required uint64 last_snapshot_index = 4;</code>
       *
       * <pre>
       **
       * The snapshot covers log entries in the range [1, lastSnapshotIndex].
       * While this information can be found in the snapshot itself, a
       * follower may want to know sooner (for example, to name the snapshot
       * file or to assert that it's not overwriting something more
       * important).
       * </pre>
       */
      long getLastSnapshotIndex();

      /**
       * <code>required uint64 byte_offset = 5;</code>
       *
       * <pre>
       **
       * The byte offset where 'data' belongs in the file. Followers can
       * expect this to grow without gaps, but they should use this to drop
       * duplicate request messages.
       * </pre>
       */
      boolean hasByteOffset();
      /**
       * <code>required uint64 byte_offset = 5;</code>
       *
       * <pre>
       **
       * The byte offset where 'data' belongs in the file. Followers can
       * expect this to grow without gaps, but they should use this to drop
       * duplicate request messages.
       * </pre>
       */
      long getByteOffset();

      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       **
       * Raw bytes of the snapshot file. This should be big enough to achieve
       * reasonable throughput without having to pipeline RPCs.
       * </pre>
       */
      boolean hasData();
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       **
       * Raw bytes of the snapshot file. This should be big enough to achieve
       * reasonable throughput without having to pipeline RPCs.
       * </pre>
       */
      com.google.protobuf.ByteString getData();

      /**
       * <code>required bool done = 7;</code>
       *
       * <pre>
       **
       * Set to true if this is the last chunk of the file and the follower
       * should now load the contents; false otherwise.
       * </pre>
       */
      boolean hasDone();
      /**
       * <code>required bool done = 7;</code>
       *
       * <pre>
       **
       * Set to true if this is the last chunk of the file and the follower
       * should now load the contents; false otherwise.
       * </pre>
       */
      boolean getDone();

      /**
       * <code>optional uint32 version = 8;</code>
       *
       * <pre>
       **
       * Explains which version of this RPC the leader (caller) supports.
       * - Servers speaking version 1 of this RPC (corresponding to LogCabin
       *   release v1.0.0 and up to a few weeks after) did not set this
       *   field.
       * - Version 2 introduced the bytes_stored field in responses. Before
       *   this, leaders assumed that InstallSnapshot always succeeded if the
       *   term matched.
       * </pre>
       */
      boolean hasVersion();
      /**
       * <code>optional uint32 version = 8;</code>
       *
       * <pre>
       **
       * Explains which version of this RPC the leader (caller) supports.
       * - Servers speaking version 1 of this RPC (corresponding to LogCabin
       *   release v1.0.0 and up to a few weeks after) did not set this
       *   field.
       * - Version 2 introduced the bytes_stored field in responses. Before
       *   this, leaders assumed that InstallSnapshot always succeeded if the
       *   term matched.
       * </pre>
       */
      int getVersion();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot.Request}
     */
    public static final class Request extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.InstallSnapshot.Request)
        RequestOrBuilder {
      // Use Request.newBuilder() to construct.
      private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }

      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Request(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                serverId_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                term_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                lastSnapshotIndex_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000008;
                byteOffset_ = input.readUInt64();
                break;
              }
              case 50: {
                bitField0_ |= 0x00000010;
                data_ = input.readBytes();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000020;
                done_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000040;
                version_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.Builder.class);
      }

      public static com.google.protobuf.Parser<Request> PARSER =
          new com.google.protobuf.AbstractParser<Request>() {
        public Request parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Request(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Request> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SERVER_ID_FIELD_NUMBER = 1;
      private long serverId_;
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 server_id = 1;</code>
       *
       * <pre>
       **
       * ID of leader (caller), so the follower can redirect clients.
       * </pre>
       */
      public long getServerId() {
        return serverId_;
      }

      public static final int TERM_FIELD_NUMBER = 3;
      private long term_;
      /**
       * <code>required uint64 term = 3;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 term = 3;</code>
       *
       * <pre>
       **
       * Caller's term.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int LAST_SNAPSHOT_INDEX_FIELD_NUMBER = 4;
      private long lastSnapshotIndex_;
      /**
       * <code>required uint64 last_snapshot_index = 4;</code>
       *
       * <pre>
       **
       * The snapshot covers log entries in the range [1, lastSnapshotIndex].
       * While this information can be found in the snapshot itself, a
       * follower may want to know sooner (for example, to name the snapshot
       * file or to assert that it's not overwriting something more
       * important).
       * </pre>
       */
      public boolean hasLastSnapshotIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 last_snapshot_index = 4;</code>
       *
       * <pre>
       **
       * The snapshot covers log entries in the range [1, lastSnapshotIndex].
       * While this information can be found in the snapshot itself, a
       * follower may want to know sooner (for example, to name the snapshot
       * file or to assert that it's not overwriting something more
       * important).
       * </pre>
       */
      public long getLastSnapshotIndex() {
        return lastSnapshotIndex_;
      }

      public static final int BYTE_OFFSET_FIELD_NUMBER = 5;
      private long byteOffset_;
      /**
       * <code>required uint64 byte_offset = 5;</code>
       *
       * <pre>
       **
       * The byte offset where 'data' belongs in the file. Followers can
       * expect this to grow without gaps, but they should use this to drop
       * duplicate request messages.
       * </pre>
       */
      public boolean hasByteOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 byte_offset = 5;</code>
       *
       * <pre>
       **
       * The byte offset where 'data' belongs in the file. Followers can
       * expect this to grow without gaps, but they should use this to drop
       * duplicate request messages.
       * </pre>
       */
      public long getByteOffset() {
        return byteOffset_;
      }

      public static final int DATA_FIELD_NUMBER = 6;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       **
       * Raw bytes of the snapshot file. This should be big enough to achieve
       * reasonable throughput without having to pipeline RPCs.
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       **
       * Raw bytes of the snapshot file. This should be big enough to achieve
       * reasonable throughput without having to pipeline RPCs.
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      public static final int DONE_FIELD_NUMBER = 7;
      private boolean done_;
      /**
       * <code>required bool done = 7;</code>
       *
       * <pre>
       **
       * Set to true if this is the last chunk of the file and the follower
       * should now load the contents; false otherwise.
       * </pre>
       */
      public boolean hasDone() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool done = 7;</code>
       *
       * <pre>
       **
       * Set to true if this is the last chunk of the file and the follower
       * should now load the contents; false otherwise.
       * </pre>
       */
      public boolean getDone() {
        return done_;
      }

      public static final int VERSION_FIELD_NUMBER = 8;
      private int version_;
      /**
       * <code>optional uint32 version = 8;</code>
       *
       * <pre>
       **
       * Explains which version of this RPC the leader (caller) supports.
       * - Servers speaking version 1 of this RPC (corresponding to LogCabin
       *   release v1.0.0 and up to a few weeks after) did not set this
       *   field.
       * - Version 2 introduced the bytes_stored field in responses. Before
       *   this, leaders assumed that InstallSnapshot always succeeded if the
       *   term matched.
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 version = 8;</code>
       *
       * <pre>
       **
       * Explains which version of this RPC the leader (caller) supports.
       * - Servers speaking version 1 of this RPC (corresponding to LogCabin
       *   release v1.0.0 and up to a few weeks after) did not set this
       *   field.
       * - Version 2 introduced the bytes_stored field in responses. Before
       *   this, leaders assumed that InstallSnapshot always succeeded if the
       *   term matched.
       * </pre>
       */
      public int getVersion() {
        return version_;
      }

      private void initFields() {
        serverId_ = 0L;
        term_ = 0L;
        lastSnapshotIndex_ = 0L;
        byteOffset_ = 0L;
        data_ = com.google.protobuf.ByteString.EMPTY;
        done_ = false;
        version_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasServerId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLastSnapshotIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasByteOffset()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDone()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(3, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(4, lastSnapshotIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(5, byteOffset_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(6, data_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(7, done_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(8, version_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, serverId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, term_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, lastSnapshotIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, byteOffset_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, data_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, done_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, version_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot.Request}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.InstallSnapshot.Request)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.RequestOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          serverId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          lastSnapshotIndex_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          byteOffset_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          done_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          version_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.serverId_ = serverId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.lastSnapshotIndex_ = lastSnapshotIndex_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.byteOffset_ = byteOffset_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.data_ = data_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.done_ = done_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.version_ = version_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request.getDefaultInstance()) return this;
          if (other.hasServerId()) {
            setServerId(other.getServerId());
          }
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasLastSnapshotIndex()) {
            setLastSnapshotIndex(other.getLastSnapshotIndex());
          }
          if (other.hasByteOffset()) {
            setByteOffset(other.getByteOffset());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          if (other.hasDone()) {
            setDone(other.getDone());
          }
          if (other.hasVersion()) {
            setVersion(other.getVersion());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasServerId()) {
            
            return false;
          }
          if (!hasTerm()) {
            
            return false;
          }
          if (!hasLastSnapshotIndex()) {
            
            return false;
          }
          if (!hasByteOffset()) {
            
            return false;
          }
          if (!hasData()) {
            
            return false;
          }
          if (!hasDone()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Request) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long serverId_ ;
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public boolean hasServerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public long getServerId() {
          return serverId_;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public Builder setServerId(long value) {
          bitField0_ |= 0x00000001;
          serverId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 server_id = 1;</code>
         *
         * <pre>
         **
         * ID of leader (caller), so the follower can redirect clients.
         * </pre>
         */
        public Builder clearServerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          serverId_ = 0L;
          onChanged();
          return this;
        }

        private long term_ ;
        /**
         * <code>required uint64 term = 3;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint64 term = 3;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 3;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000002;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 3;</code>
         *
         * <pre>
         **
         * Caller's term.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000002);
          term_ = 0L;
          onChanged();
          return this;
        }

        private long lastSnapshotIndex_ ;
        /**
         * <code>required uint64 last_snapshot_index = 4;</code>
         *
         * <pre>
         **
         * The snapshot covers log entries in the range [1, lastSnapshotIndex].
         * While this information can be found in the snapshot itself, a
         * follower may want to know sooner (for example, to name the snapshot
         * file or to assert that it's not overwriting something more
         * important).
         * </pre>
         */
        public boolean hasLastSnapshotIndex() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint64 last_snapshot_index = 4;</code>
         *
         * <pre>
         **
         * The snapshot covers log entries in the range [1, lastSnapshotIndex].
         * While this information can be found in the snapshot itself, a
         * follower may want to know sooner (for example, to name the snapshot
         * file or to assert that it's not overwriting something more
         * important).
         * </pre>
         */
        public long getLastSnapshotIndex() {
          return lastSnapshotIndex_;
        }
        /**
         * <code>required uint64 last_snapshot_index = 4;</code>
         *
         * <pre>
         **
         * The snapshot covers log entries in the range [1, lastSnapshotIndex].
         * While this information can be found in the snapshot itself, a
         * follower may want to know sooner (for example, to name the snapshot
         * file or to assert that it's not overwriting something more
         * important).
         * </pre>
         */
        public Builder setLastSnapshotIndex(long value) {
          bitField0_ |= 0x00000004;
          lastSnapshotIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 last_snapshot_index = 4;</code>
         *
         * <pre>
         **
         * The snapshot covers log entries in the range [1, lastSnapshotIndex].
         * While this information can be found in the snapshot itself, a
         * follower may want to know sooner (for example, to name the snapshot
         * file or to assert that it's not overwriting something more
         * important).
         * </pre>
         */
        public Builder clearLastSnapshotIndex() {
          bitField0_ = (bitField0_ & ~0x00000004);
          lastSnapshotIndex_ = 0L;
          onChanged();
          return this;
        }

        private long byteOffset_ ;
        /**
         * <code>required uint64 byte_offset = 5;</code>
         *
         * <pre>
         **
         * The byte offset where 'data' belongs in the file. Followers can
         * expect this to grow without gaps, but they should use this to drop
         * duplicate request messages.
         * </pre>
         */
        public boolean hasByteOffset() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required uint64 byte_offset = 5;</code>
         *
         * <pre>
         **
         * The byte offset where 'data' belongs in the file. Followers can
         * expect this to grow without gaps, but they should use this to drop
         * duplicate request messages.
         * </pre>
         */
        public long getByteOffset() {
          return byteOffset_;
        }
        /**
         * <code>required uint64 byte_offset = 5;</code>
         *
         * <pre>
         **
         * The byte offset where 'data' belongs in the file. Followers can
         * expect this to grow without gaps, but they should use this to drop
         * duplicate request messages.
         * </pre>
         */
        public Builder setByteOffset(long value) {
          bitField0_ |= 0x00000008;
          byteOffset_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 byte_offset = 5;</code>
         *
         * <pre>
         **
         * The byte offset where 'data' belongs in the file. Followers can
         * expect this to grow without gaps, but they should use this to drop
         * duplicate request messages.
         * </pre>
         */
        public Builder clearByteOffset() {
          bitField0_ = (bitField0_ & ~0x00000008);
          byteOffset_ = 0L;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes data = 6;</code>
         *
         * <pre>
         **
         * Raw bytes of the snapshot file. This should be big enough to achieve
         * reasonable throughput without having to pipeline RPCs.
         * </pre>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required bytes data = 6;</code>
         *
         * <pre>
         **
         * Raw bytes of the snapshot file. This should be big enough to achieve
         * reasonable throughput without having to pipeline RPCs.
         * </pre>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>required bytes data = 6;</code>
         *
         * <pre>
         **
         * Raw bytes of the snapshot file. This should be big enough to achieve
         * reasonable throughput without having to pipeline RPCs.
         * </pre>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes data = 6;</code>
         *
         * <pre>
         **
         * Raw bytes of the snapshot file. This should be big enough to achieve
         * reasonable throughput without having to pipeline RPCs.
         * </pre>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000010);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }

        private boolean done_ ;
        /**
         * <code>required bool done = 7;</code>
         *
         * <pre>
         **
         * Set to true if this is the last chunk of the file and the follower
         * should now load the contents; false otherwise.
         * </pre>
         */
        public boolean hasDone() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required bool done = 7;</code>
         *
         * <pre>
         **
         * Set to true if this is the last chunk of the file and the follower
         * should now load the contents; false otherwise.
         * </pre>
         */
        public boolean getDone() {
          return done_;
        }
        /**
         * <code>required bool done = 7;</code>
         *
         * <pre>
         **
         * Set to true if this is the last chunk of the file and the follower
         * should now load the contents; false otherwise.
         * </pre>
         */
        public Builder setDone(boolean value) {
          bitField0_ |= 0x00000020;
          done_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool done = 7;</code>
         *
         * <pre>
         **
         * Set to true if this is the last chunk of the file and the follower
         * should now load the contents; false otherwise.
         * </pre>
         */
        public Builder clearDone() {
          bitField0_ = (bitField0_ & ~0x00000020);
          done_ = false;
          onChanged();
          return this;
        }

        private int version_ ;
        /**
         * <code>optional uint32 version = 8;</code>
         *
         * <pre>
         **
         * Explains which version of this RPC the leader (caller) supports.
         * - Servers speaking version 1 of this RPC (corresponding to LogCabin
         *   release v1.0.0 and up to a few weeks after) did not set this
         *   field.
         * - Version 2 introduced the bytes_stored field in responses. Before
         *   this, leaders assumed that InstallSnapshot always succeeded if the
         *   term matched.
         * </pre>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 version = 8;</code>
         *
         * <pre>
         **
         * Explains which version of this RPC the leader (caller) supports.
         * - Servers speaking version 1 of this RPC (corresponding to LogCabin
         *   release v1.0.0 and up to a few weeks after) did not set this
         *   field.
         * - Version 2 introduced the bytes_stored field in responses. Before
         *   this, leaders assumed that InstallSnapshot always succeeded if the
         *   term matched.
         * </pre>
         */
        public int getVersion() {
          return version_;
        }
        /**
         * <code>optional uint32 version = 8;</code>
         *
         * <pre>
         **
         * Explains which version of this RPC the leader (caller) supports.
         * - Servers speaking version 1 of this RPC (corresponding to LogCabin
         *   release v1.0.0 and up to a few weeks after) did not set this
         *   field.
         * - Version 2 introduced the bytes_stored field in responses. Before
         *   this, leaders assumed that InstallSnapshot always succeeded if the
         *   term matched.
         * </pre>
         */
        public Builder setVersion(int value) {
          bitField0_ |= 0x00000040;
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 version = 8;</code>
         *
         * <pre>
         **
         * Explains which version of this RPC the leader (caller) supports.
         * - Servers speaking version 1 of this RPC (corresponding to LogCabin
         *   release v1.0.0 and up to a few weeks after) did not set this
         *   field.
         * - Version 2 introduced the bytes_stored field in responses. Before
         *   this, leaders assumed that InstallSnapshot always succeeded if the
         *   term matched.
         * </pre>
         */
        public Builder clearVersion() {
          bitField0_ = (bitField0_ & ~0x00000040);
          version_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.InstallSnapshot.Request)
      }

      static {
        defaultInstance = new Request(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.InstallSnapshot.Request)
    }

    public interface ResponseOrBuilder extends
        // @@protoc_insertion_point(interface_extends:LogCabin.Protocol.Raft.InstallSnapshot.Response)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      boolean hasTerm();
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      long getTerm();

      /**
       * <code>optional uint64 bytes_stored = 2;</code>
       *
       * <pre>
       **
       * The total number of bytes in the snapshot that the follower has
       * stored (after applying the request).
       * This was introduced to fix
       * https://github.com/logcabin/logcabin/issues/174 .
       * Before, followers could only receive snapshot chunks in sequence. If
       * they restarted, they'd have discarded their previous chunks and they
       * would just repeatedly PANIC. This is now used to signal to the
       * leader how many bytes the follower actually has saved. The leader
       * considers the snapshot transfer complete when bytes_stored equals
       * the full size of the snapshot. The leader should use bytes_stored
       * as the value for byte_offset in the next request (most importantly,
       * when a follower reboots, it returns 0 here and the leader starts at
       * offset 0 in the next request).
       * Leaders that do not support InstallSnapshot version 2 entirely
       * ignore this field.
       * </pre>
       */
      boolean hasBytesStored();
      /**
       * <code>optional uint64 bytes_stored = 2;</code>
       *
       * <pre>
       **
       * The total number of bytes in the snapshot that the follower has
       * stored (after applying the request).
       * This was introduced to fix
       * https://github.com/logcabin/logcabin/issues/174 .
       * Before, followers could only receive snapshot chunks in sequence. If
       * they restarted, they'd have discarded their previous chunks and they
       * would just repeatedly PANIC. This is now used to signal to the
       * leader how many bytes the follower actually has saved. The leader
       * considers the snapshot transfer complete when bytes_stored equals
       * the full size of the snapshot. The leader should use bytes_stored
       * as the value for byte_offset in the next request (most importantly,
       * when a follower reboots, it returns 0 here and the leader starts at
       * offset 0 in the next request).
       * Leaders that do not support InstallSnapshot version 2 entirely
       * ignore this field.
       * </pre>
       */
      long getBytesStored();
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot.Response}
     */
    public static final class Response extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:LogCabin.Protocol.Raft.InstallSnapshot.Response)
        ResponseOrBuilder {
      // Use Response.newBuilder() to construct.
      private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Response(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }

      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Response(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                term_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                bytesStored_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.Builder.class);
      }

      public static com.google.protobuf.Parser<Response> PARSER =
          new com.google.protobuf.AbstractParser<Response>() {
        public Response parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Response> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TERM_FIELD_NUMBER = 1;
      private long term_;
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 term = 1;</code>
       *
       * <pre>
       **
       * Callee's term, for the caller to update itself.
       * </pre>
       */
      public long getTerm() {
        return term_;
      }

      public static final int BYTES_STORED_FIELD_NUMBER = 2;
      private long bytesStored_;
      /**
       * <code>optional uint64 bytes_stored = 2;</code>
       *
       * <pre>
       **
       * The total number of bytes in the snapshot that the follower has
       * stored (after applying the request).
       * This was introduced to fix
       * https://github.com/logcabin/logcabin/issues/174 .
       * Before, followers could only receive snapshot chunks in sequence. If
       * they restarted, they'd have discarded their previous chunks and they
       * would just repeatedly PANIC. This is now used to signal to the
       * leader how many bytes the follower actually has saved. The leader
       * considers the snapshot transfer complete when bytes_stored equals
       * the full size of the snapshot. The leader should use bytes_stored
       * as the value for byte_offset in the next request (most importantly,
       * when a follower reboots, it returns 0 here and the leader starts at
       * offset 0 in the next request).
       * Leaders that do not support InstallSnapshot version 2 entirely
       * ignore this field.
       * </pre>
       */
      public boolean hasBytesStored() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 bytes_stored = 2;</code>
       *
       * <pre>
       **
       * The total number of bytes in the snapshot that the follower has
       * stored (after applying the request).
       * This was introduced to fix
       * https://github.com/logcabin/logcabin/issues/174 .
       * Before, followers could only receive snapshot chunks in sequence. If
       * they restarted, they'd have discarded their previous chunks and they
       * would just repeatedly PANIC. This is now used to signal to the
       * leader how many bytes the follower actually has saved. The leader
       * considers the snapshot transfer complete when bytes_stored equals
       * the full size of the snapshot. The leader should use bytes_stored
       * as the value for byte_offset in the next request (most importantly,
       * when a follower reboots, it returns 0 here and the leader starts at
       * offset 0 in the next request).
       * Leaders that do not support InstallSnapshot version 2 entirely
       * ignore this field.
       * </pre>
       */
      public long getBytesStored() {
        return bytesStored_;
      }

      private void initFields() {
        term_ = 0L;
        bytesStored_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTerm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, bytesStored_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, term_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, bytesStored_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot.Response}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.InstallSnapshot.Response)
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.ResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.Builder.class);
        }

        // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          term_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          bytesStored_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response getDefaultInstanceForType() {
          return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.getDefaultInstance();
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response build() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response buildPartial() {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.term_ = term_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.bytesStored_ = bytesStored_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response) {
            return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response other) {
          if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response.getDefaultInstance()) return this;
          if (other.hasTerm()) {
            setTerm(other.getTerm());
          }
          if (other.hasBytesStored()) {
            setBytesStored(other.getBytesStored());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTerm()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Response) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long term_ ;
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public long getTerm() {
          return term_;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public Builder setTerm(long value) {
          bitField0_ |= 0x00000001;
          term_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 term = 1;</code>
         *
         * <pre>
         **
         * Callee's term, for the caller to update itself.
         * </pre>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = 0L;
          onChanged();
          return this;
        }

        private long bytesStored_ ;
        /**
         * <code>optional uint64 bytes_stored = 2;</code>
         *
         * <pre>
         **
         * The total number of bytes in the snapshot that the follower has
         * stored (after applying the request).
         * This was introduced to fix
         * https://github.com/logcabin/logcabin/issues/174 .
         * Before, followers could only receive snapshot chunks in sequence. If
         * they restarted, they'd have discarded their previous chunks and they
         * would just repeatedly PANIC. This is now used to signal to the
         * leader how many bytes the follower actually has saved. The leader
         * considers the snapshot transfer complete when bytes_stored equals
         * the full size of the snapshot. The leader should use bytes_stored
         * as the value for byte_offset in the next request (most importantly,
         * when a follower reboots, it returns 0 here and the leader starts at
         * offset 0 in the next request).
         * Leaders that do not support InstallSnapshot version 2 entirely
         * ignore this field.
         * </pre>
         */
        public boolean hasBytesStored() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 bytes_stored = 2;</code>
         *
         * <pre>
         **
         * The total number of bytes in the snapshot that the follower has
         * stored (after applying the request).
         * This was introduced to fix
         * https://github.com/logcabin/logcabin/issues/174 .
         * Before, followers could only receive snapshot chunks in sequence. If
         * they restarted, they'd have discarded their previous chunks and they
         * would just repeatedly PANIC. This is now used to signal to the
         * leader how many bytes the follower actually has saved. The leader
         * considers the snapshot transfer complete when bytes_stored equals
         * the full size of the snapshot. The leader should use bytes_stored
         * as the value for byte_offset in the next request (most importantly,
         * when a follower reboots, it returns 0 here and the leader starts at
         * offset 0 in the next request).
         * Leaders that do not support InstallSnapshot version 2 entirely
         * ignore this field.
         * </pre>
         */
        public long getBytesStored() {
          return bytesStored_;
        }
        /**
         * <code>optional uint64 bytes_stored = 2;</code>
         *
         * <pre>
         **
         * The total number of bytes in the snapshot that the follower has
         * stored (after applying the request).
         * This was introduced to fix
         * https://github.com/logcabin/logcabin/issues/174 .
         * Before, followers could only receive snapshot chunks in sequence. If
         * they restarted, they'd have discarded their previous chunks and they
         * would just repeatedly PANIC. This is now used to signal to the
         * leader how many bytes the follower actually has saved. The leader
         * considers the snapshot transfer complete when bytes_stored equals
         * the full size of the snapshot. The leader should use bytes_stored
         * as the value for byte_offset in the next request (most importantly,
         * when a follower reboots, it returns 0 here and the leader starts at
         * offset 0 in the next request).
         * Leaders that do not support InstallSnapshot version 2 entirely
         * ignore this field.
         * </pre>
         */
        public Builder setBytesStored(long value) {
          bitField0_ |= 0x00000002;
          bytesStored_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 bytes_stored = 2;</code>
         *
         * <pre>
         **
         * The total number of bytes in the snapshot that the follower has
         * stored (after applying the request).
         * This was introduced to fix
         * https://github.com/logcabin/logcabin/issues/174 .
         * Before, followers could only receive snapshot chunks in sequence. If
         * they restarted, they'd have discarded their previous chunks and they
         * would just repeatedly PANIC. This is now used to signal to the
         * leader how many bytes the follower actually has saved. The leader
         * considers the snapshot transfer complete when bytes_stored equals
         * the full size of the snapshot. The leader should use bytes_stored
         * as the value for byte_offset in the next request (most importantly,
         * when a follower reboots, it returns 0 here and the leader starts at
         * offset 0 in the next request).
         * Leaders that do not support InstallSnapshot version 2 entirely
         * ignore this field.
         * </pre>
         */
        public Builder clearBytesStored() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bytesStored_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.InstallSnapshot.Response)
      }

      static {
        defaultInstance = new Response(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.InstallSnapshot.Response)
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LogCabin.Protocol.Raft.InstallSnapshot}
     *
     * <pre>
     **
     * InstallSnapshot RPC: replicate part of a snapshot file to a follower.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:LogCabin.Protocol.Raft.InstallSnapshot)
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.class, com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.Builder.class);
      }

      // Construct using com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot getDefaultInstanceForType() {
        return com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.getDefaultInstance();
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot build() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot buildPartial() {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot result = new com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot) {
          return mergeFrom((com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot other) {
        if (other == com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.lia.scale.ReverseProxyPlayer.LocalLogCabin.LogCabin.Protocol.Raft.InstallSnapshot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LogCabin.Protocol.Raft.InstallSnapshot)
    }

    static {
      defaultInstance = new InstallSnapshot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LogCabin.Protocol.Raft.InstallSnapshot)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_Error_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_Server_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_Server_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_Configuration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_Configuration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_RequestVote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_RequestVote_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_RequestVote_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_AppendEntries_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_InstallSnapshot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nRaft.proto\022\026LogCabin.Protocol.Raft\"\007\n\005" +
      "Error\".\n\006Server\022\021\n\tserver_id\030\001 \002(\004\022\021\n\tad" +
      "dresses\030\002 \002(\t\"F\n\023SimpleConfiguration\022/\n\007" +
      "servers\030\001 \003(\0132\036.LogCabin.Protocol.Raft.S" +
      "erver\"\241\001\n\rConfiguration\022G\n\022prev_configur" +
      "ation\030\001 \002(\0132+.LogCabin.Protocol.Raft.Sim" +
      "pleConfiguration\022G\n\022next_configuration\030\002" +
      " \001(\0132+.LogCabin.Protocol.Raft.SimpleConf" +
      "iguration\"\267\001\n\005Entry\022\014\n\004term\030\001 \002(\004\022\r\n\005ind" +
      "ex\030\005 \001(\004\022\024\n\014cluster_time\030\006 \002(\004\022/\n\004type\030\002",
      " \001(\0162!.LogCabin.Protocol.Raft.EntryType\022" +
      "<\n\rconfiguration\030\003 \001(\0132%.LogCabin.Protoc" +
      "ol.Raft.Configuration\022\014\n\004data\030\004 \001(\014\"\243\001\n\013" +
      "RequestVote\032Y\n\007Request\022\021\n\tserver_id\030\001 \002(" +
      "\004\022\014\n\004term\030\002 \002(\004\022\025\n\rlast_log_term\030\003 \002(\004\022\026" +
      "\n\016last_log_index\030\004 \002(\004\0329\n\010Response\022\014\n\004te" +
      "rm\030\001 \002(\004\022\017\n\007granted\030\002 \002(\010\022\016\n\006log_ok\030\003 \001(" +
      "\010\"\305\003\n\rAppendEntries\032\237\001\n\007Request\022\021\n\tserve" +
      "r_id\030\001 \002(\004\022\014\n\004term\030\002 \002(\004\022\026\n\016prev_log_ind" +
      "ex\030\003 \002(\004\022\025\n\rprev_log_term\030\004 \002(\004\022.\n\007entri",
      "es\030\005 \003(\0132\035.LogCabin.Protocol.Raft.Entry\022" +
      "\024\n\014commit_index\030\006 \002(\004\032\221\002\n\010Response\022\014\n\004te" +
      "rm\030\001 \002(\004\022\017\n\007success\030\002 \002(\010\022\026\n\016last_log_in" +
      "dex\030\003 \001(\004\022^\n\023server_capabilities\030\004 \001(\0132A" +
      ".LogCabin.Protocol.Raft.AppendEntries.Re" +
      "sponse.ServerCapabilities\032n\n\022ServerCapab" +
      "ilities\022+\n#min_supported_state_machine_v" +
      "ersion\030\001 \001(\r\022+\n#max_supported_state_mach" +
      "ine_version\030\002 \001(\r\"\315\001\n\017InstallSnapshot\032\211\001" +
      "\n\007Request\022\021\n\tserver_id\030\001 \002(\004\022\014\n\004term\030\003 \002",
      "(\004\022\033\n\023last_snapshot_index\030\004 \002(\004\022\023\n\013byte_" +
      "offset\030\005 \002(\004\022\014\n\004data\030\006 \002(\014\022\014\n\004done\030\007 \002(\010" +
      "\022\017\n\007version\030\010 \001(\r\032.\n\010Response\022\014\n\004term\030\001 " +
      "\002(\004\022\024\n\014bytes_stored\030\002 \001(\004*D\n\006OpCode\022\020\n\014R" +
      "EQUEST_VOTE\020\001\022\022\n\016APPEND_ENTRIES\020\002\022\024\n\020INS" +
      "TALL_SNAPSHOT\020\003*?\n\tEntryType\022\013\n\007UNKNOWN\020" +
      "\000\022\021\n\rCONFIGURATION\020\001\022\010\n\004DATA\020\002\022\010\n\004NOOP\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_LogCabin_Protocol_Raft_Error_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_LogCabin_Protocol_Raft_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_Error_descriptor,
        new java.lang.String[] { });
    internal_static_LogCabin_Protocol_Raft_Server_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_LogCabin_Protocol_Raft_Server_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_Server_descriptor,
        new java.lang.String[] { "ServerId", "Addresses", });
    internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_SimpleConfiguration_descriptor,
        new java.lang.String[] { "Servers", });
    internal_static_LogCabin_Protocol_Raft_Configuration_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_LogCabin_Protocol_Raft_Configuration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_Configuration_descriptor,
        new java.lang.String[] { "PrevConfiguration", "NextConfiguration", });
    internal_static_LogCabin_Protocol_Raft_Entry_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_LogCabin_Protocol_Raft_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_Entry_descriptor,
        new java.lang.String[] { "Term", "Index", "ClusterTime", "Type", "Configuration", "Data", });
    internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_LogCabin_Protocol_Raft_RequestVote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor,
        new java.lang.String[] { });
    internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor =
      internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor.getNestedTypes().get(0);
    internal_static_LogCabin_Protocol_Raft_RequestVote_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_RequestVote_Request_descriptor,
        new java.lang.String[] { "ServerId", "Term", "LastLogTerm", "LastLogIndex", });
    internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor =
      internal_static_LogCabin_Protocol_Raft_RequestVote_descriptor.getNestedTypes().get(1);
    internal_static_LogCabin_Protocol_Raft_RequestVote_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_RequestVote_Response_descriptor,
        new java.lang.String[] { "Term", "Granted", "LogOk", });
    internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_LogCabin_Protocol_Raft_AppendEntries_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor,
        new java.lang.String[] { });
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor =
      internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor.getNestedTypes().get(0);
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_AppendEntries_Request_descriptor,
        new java.lang.String[] { "ServerId", "Term", "PrevLogIndex", "PrevLogTerm", "Entries", "CommitIndex", });
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor =
      internal_static_LogCabin_Protocol_Raft_AppendEntries_descriptor.getNestedTypes().get(1);
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor,
        new java.lang.String[] { "Term", "Success", "LastLogIndex", "ServerCapabilities", });
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor =
      internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_descriptor.getNestedTypes().get(0);
    internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_AppendEntries_Response_ServerCapabilities_descriptor,
        new java.lang.String[] { "MinSupportedStateMachineVersion", "MaxSupportedStateMachineVersion", });
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor,
        new java.lang.String[] { });
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor =
      internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor.getNestedTypes().get(0);
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Request_descriptor,
        new java.lang.String[] { "ServerId", "Term", "LastSnapshotIndex", "ByteOffset", "Data", "Done", "Version", });
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor =
      internal_static_LogCabin_Protocol_Raft_InstallSnapshot_descriptor.getNestedTypes().get(1);
    internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_LogCabin_Protocol_Raft_InstallSnapshot_Response_descriptor,
        new java.lang.String[] { "Term", "BytesStored", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
